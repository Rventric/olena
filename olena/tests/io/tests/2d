//								    -*- c++ -*-
// Copyright (C) 2004  EPITA Research and Development Laboratory
//
// This file is part of the Olena Library.  This library is free
// software; you can redistribute it and/or modify it under the terms
// of the GNU General Public License version 2 as published by the
// Free Software Foundation.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this library; see the file COPYING.  If not, write to
// the Free Software Foundation, 59 Temple Place - Suite 330, Boston,
// MA 02111-1307, USA.
//
// As a special exception, you may use this file as part of a free
// software library without restriction.  Specifically, if other files
// instantiate templates or use macros or inline functions from this
// file, or you compile this file and link it with other files to
// produce an executable, this file does not by itself cause the
// resulting executable to be covered by the GNU General Public
// License.  This exception does not however invalidate any other
// reasons why the executable file might be covered by the GNU General
// Public License.


#include "loadsave.hh"

bool
check(void)
{
  bool fail = false;

  typedef image2d<range<int_u8, bounded_u<0, 255>, strict > > ima_range_int_u8;
  typedef image2d<int_u<6, strict> > ima_int_u6;

  fail |= loadsave< image2d<bin>           >(rdata("lena"), "lena");
  fail |= loadsave< image2d<bool>          >(rdata("lena"), "lena");
  fail |= loadsave< image2d<int_u8>        >(rdata("lena"), "lena");
  fail |= loadsave< image2d<unsigned char> >(rdata("lena"), "lena");
  fail |= ! loadsave< ima_int_u6             >(rdata("lena"), "lena");
  fail |= loadsave< ima_range_int_u8       >(rdata("lena"), "lena");
  fail |= loadsave< image2d<nrgb_8>        >(rdata("lena"), "lena");
  fail |= loadsave< image2d<xyz_8>         >(rdata("lena"), "lena");
  fail |= loadsave< image2d<vec<3, int_u8> > >(rdata("lena"), "lena");

  fail |= loadsave< image2d<bin>           >(rdata("lena.pbm"), "lena.pbm");
  fail |= loadsave< image2d<int_u8>        >(rdata("lena.pgm"), "lena.pgm");
  fail |= loadsave< image2d<unsigned char> >(rdata("lena.pgm"), "lena.pgm");
  fail |= loadsave< image2d<nrgb_8>        >(rdata("lena.ppm"), "lena.ppm");

  fail |= loadsave< image2d<bin>     >(rdata("lena.ppbm"), "lena.ppbm");
  fail |= loadsave< image2d<int_u8>  >(rdata("lena.ppgm"), "lena.ppgm");
  fail |= loadsave< image2d<nrgb_8>  >(rdata("lena.pppm"), "lena.pppm");

  fail |= loadsave< image2d<unsigned short int> >(rdata("lena16b.pgm"), "lena.pgm");
  fail |= loadsave< image2d<int_u16> >(rdata("lena16b.pgm"), "lena16b.pgm");
  fail |= loadsave< image2d<int_u16> >(rdata("lena16b.ppgm"), "lena16b.ppgm");

#if HAVE_ZLIB
  fail |= loadsave< image2d<bin>    >(rdata("lena.pbm.gz"), "lena.pbm.gz");
  fail |= loadsave< image2d<int_u8> >(rdata("lena.pgm.gz"), "lena.pgm.gz");
  fail |= loadsave< image2d<nrgb_8> >(rdata("lena.ppm.gz"), "lena.ppm.gz");
#endif

  return fail;
}
