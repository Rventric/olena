//								    -*- c++ -*-

#include <iostream>

#include <oln/basics1d.hh>
#include <oln/basics2d.hh>
#include <oln/basics3d.hh>

// #include <oln/core/point1d.hh>
// #include <oln/core/point2d.hh>
// #include <oln/core/point3d.hh>
// #include <oln/core/image1d_size.hh>
// #include <oln/core/image2d_size.hh>
// #include <oln/core/image3d_size.hh>
// #include <mlc/objs.hh>
// #include <oln/core/iter.hh>
// #include <oln/core/fwd_iter1d.hh>
// #include <oln/core/fwd_iter2d.hh>
// #include <oln/core/fwd_iter3d.hh>
// #include <oln/core/bkd_iter1d.hh>
// #include <oln/core/bkd_iter2d.hh>
// #include <oln/core/bkd_iter3d.hh>
// #include <oln/core/image1d.hh>
// #include <oln/core/image2d.hh>
// #include <oln/core/image3d.hh>
// #include <oln/core/macros.hh>

#include <ntg/all.hh>

int main()
{
  oln::image1d<ntg::int_u8> ima1(4);
  ima1(1) = 7;
  std::cout << ima1 << std::endl;
  
  oln::image2d<ntg::int_u8> ima2(2, 2);
  ima2(1, 0) = 7;
  std::cout << ima2 << std::endl;
  
  oln::image3d<ntg::int_u8> ima3(2, 2, 4);
  ima3(1, 0, 1) = 7;
  
  oln::image3d<ntg::int_u8> ima4(ima3);
  oln::image3d<ntg::int_u8>::iter_type it(ima4);
  //for_all(it)
  ima4[it] = 6;

  //ima3 = ima4;
  std::cout << ima3 << std::endl;
}
