//                                                                  -*- c++ -*-
#include "data.hh"
#include <oln/utils/md5.hh>

#include "check.hh" 
#include <oln/basics2d.hh> 
#include <oln/morpho/extrema.hh> 
#include <ntg/all.hh> 
#include <iostream> 
 
int main() 
{
oln::utils::key::value_type   data_key[16] = {0xfc, 0xf3, 0x53, 0xb7, 0xd, 0x4e, 0x9b, 0x67, 0x2f, 0xb7, 0xd, 0x66, 0x7, 0xc3, 0xea, 0x87};

oln::utils::key		   key(data_key);

   typedef oln::image2d<ntg::
int_u8>	im_type;
   typedef oln::image2d<ntg::bin>	bin_im_type;
   im_type		light(oln::load(rdata("lena.pgm")));
   bin_im_type	minima(oln::load(rdata("map.pbm")));
   if (oln::utils::md5(oln::morpho::sequential::minima_imposition(light,							  minima,							  oln::neighb_c4())) == key)
  std::cout << "OK" << std::endl;
else
  {
    std::cout << "FAIL" << std::endl;
    return true;
  }
 }
