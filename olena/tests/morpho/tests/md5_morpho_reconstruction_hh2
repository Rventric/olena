//                                                                  -*- c++ -*-
#include "data.hh"
#include <oln/utils/md5.hh>

#include "check.hh"
#include <oln/basics2d.hh>
#include <oln/morpho/opening.hh>
#include <oln/morpho/reconstruction.hh>
#include <oln/level/compare.hh>
#include <ntg/all.hh>

int main()
{
oln::utils::key::value_type   data_key[16] = {0x7e, 0x56, 0x6, 0xbe, 0xa1, 0xcd, 0x80, 0xf1, 0x4c, 0x9d, 0x63, 0x10, 0x4e, 0x3e, 0x9, 0x96};

oln::utils::key		   key(data_key);

   typedef oln::image2d<ntg::
int_u8>	im_type;
   im_type	im1(oln::load(rdata("lena128.pgm")));
   im_type	im2 = oln::morpho::opening(im1, oln::win_c4p());
   if (oln::utils::md5(oln::morpho::hybrid::geodesic_reconstruction_dilation(im2,                                                                 im1,                                                                 oln::neighb_c4())) == key)
  std::cout << "OK" << std::endl;
else
  {
    std::cout << "FAIL" << std::endl;
    return true;
  }
   return  0;
 }
