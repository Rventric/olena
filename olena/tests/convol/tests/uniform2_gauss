// -*- c++ -*-
// Copyright (C) 2004  EPITA Research and Development Laboratory
//
// This file is part of the Olena Library.  This library is free
// software; you can redistribute it and/or modify it under the terms
// of the GNU General Public License version 2 as published by the
// Free Software Foundation.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this library; see the file COPYING.  If not, write to
// the Free Software Foundation, 59 Temple Place - Suite 330, Boston,
// MA 02111-1307, USA.
//
// As a special exception, you may use this file as part of a free
// software library without restriction.  Specifically, if other files
// instantiate templates or use macros or inline functions from this
// file, or you compile this file and link it with other files to
// produce an executable, this file does not by itself cause the
// resulting executable to be covered by the GNU General Public
// License.  This exception does not however invalidate any other
// reasons why the executable file might be covered by the GNU General
// Public License.


#include <oln/basics2d.hh>
#include <oln/convol/fast_gaussian.hh>
#include <oln/convert/basics.hh>

#include "check.hh"
#include "data.hh"

#include <iostream>
using std::cout;
using std::endl;

using namespace oln;
using namespace mlc;
using namespace ntg;

// check if the gaussian of an uniform image doesn't destroy the image
// this test will fail since the relation between the border size and sigma is non linear
bool check()
{
  image2d<int_u8>		img(50, 50);
  image2d<int_u8>::iter_type	it(img);

  for_all(it)
    img[it] = 42;
  image2d<int_u8>		img2 = convol::fast::gaussian(img, 50); // XFAIL

  for_all(it)
    if (img[it] != img2[it])
      return true;
  return false;
}
