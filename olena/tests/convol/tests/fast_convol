#include "data.hh"
#include "check.hh"

#include <oln/basics2d.hh>
#include <oln/convol/slow_gaussian.hh>
#include <oln/convol/fast_convolution.hh>
#include <oln/utils/md5.hh>

using namespace oln;
using namespace ntg;

int main() {
  image2d<int_u8> src(rdata("lena.pgm"));
  float_d sigma = 2.5;
  float_d radius = 3;
  image2d<float_d> k = convol::slow::gaussian_kernel<2>::kernel(sigma, radius);
  image2d<float_d> f_src(src.size());
  oln_iter_type_(image2d<float_d>) i(src);
  for_all(i)
    f_src[i] = cast::bound<float_d>(src[i]);

  image2d<float_d> tmp = convol::fast::convolve<float_d>(f_src, k);
  image2d<float_d> tmp2 = convol::slow::convolve<float_d>(f_src, k);

  for_all(i)
    if (tmp[i] != tmp2[i])
      return false;
}
