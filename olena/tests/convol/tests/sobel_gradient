//                                                                  -*- c++ -*-
// Copyright (C) 2004  EPITA Research and Development Laboratory
//
// This file is part of the Olena Library.  This library is free
// software; you can redistribute it and/or modify it under the terms
// of the GNU General Public License version 2 as published by the
// Free Software Foundation.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this library; see the file COPYING.  If not, write to
// the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
// Boston, MA 02110-1301, USA.
//
// As a special exception, you may use this file as part of a free
// software library without restriction.  Specifically, if other files
// instantiate templates or use macros or inline functions from this
// file, or you compile this file and link it with other files to
// produce an executable, this file does not by itself cause the
// resulting executable to be covered by the GNU General Public
// License.  This exception does not however invalidate any other
// reasons why the executable file might be covered by the GNU General
// Public License.


#include <oln/basics2d.hh>
#include <oln/convol/slow_convolution.hh>
#include <oln/convert/basics.hh>

#include "check.hh"
#include "data.hh"

#include <iostream>
using std::cout;
using std::endl;

using namespace oln;
using namespace mlc;
using namespace ntg;

bool check()
{
  image2d<int_u8> img = load(rdata("lena.pgm"));

  image2d<int_s<10> > res_img = convol::slow::convolve<int_s<10> >(img, (ints_2d =
									 -1, 0, 1, lbrk,
									 -2, 0, 2,
									 -1, 0, 1, end)); // ABORT

  save(apply(convert::stretch<int_u8>(), res_img), "lena-sobel.pgm");

  // FIXME: This tests always succeed.
  return false;
}
