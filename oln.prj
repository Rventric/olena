 ;; -*- Prcs -*-
(Created-By-Prcs-Version 1 3 3)
(Project-Description "Olena")
(Project-Version oln oln_2004_paradigm 4)
(Parent-Version oln oln_2004_paradigm 2)
(Version-Log "Index: olena/ChangeLog
from  Giovanni Palma  <giovanni@lrde.epita.fr>

	* olena/oln/core/dpoint1d.hh: Correct type definition problems.
	* olena/oln/core/abstract/dpoint.hh: Likewise.
	* olena/oln/core/point_nd.hh: Likewise.
	* olena/oln/core/dpoint_nd.hh: Likewise.
	* olena/oln/core/macros.hh: Add new macros.

	* olena/oln/core/neighborhood1d.hh: Restart from scratch.
	* olena/oln/core/neighborhood2d.hh: Likewise.
	* olena/oln/core/neighborhood3d.hh: Likewise.
	* olena/oln/core/abstract/neighborhood.hh: Likewise.
	* olena/oln/core/abstract/point.hh: Likewise.
	* olena/oln/core/abstract/struct_elt.hh: Likewise.
	* olena/oln/core/dim3d.hh: Likewise.
	* olena/oln/core/dim2d.hh: Likewise.
	* olena/oln/core/dim1d.hh: Likewise.
	* olena/oln/core/abstract/dim.hh: Likewise.

	* olena/oln/core/default_props.hh: New file. Definition of default
	properties.


Index: olena/oln/core/dpoint1d.hh
--- olena/oln/core/dpoint1d.hh Mon, 13 Sep 2004 22:08:03 +0200 van-vl_n (oln/d/27_dpoint1d.h 1.14.2.1 600)
+++ olena/oln/core/dpoint1d.hh Tue, 14 Sep 2004 10:11:38 +0200 palma_g (oln/d/27_dpoint1d.h 1.14.2.1 600)
@@ -28,7 +28,8 @@
 #ifndef OLENA_CORE_DPOINT1D_HH
 # define OLENA_CORE_DPOINT1D_HH
 
-# include <oln/core/abstract/dpoint_nd.hh>
+# include <oln/core/abstract/dpoint.hh>
+# include <oln/core/dpoint_nd.hh>
 
 namespace oln {
 
Index: olena/oln/core/abstract/dpoint.hh
--- olena/oln/core/abstract/dpoint.hh Mon, 13 Sep 2004 22:08:03 +0200 van-vl_n (oln/d/28_dpoint.hh 1.20.2.1 600)
+++ olena/oln/core/abstract/dpoint.hh Tue, 14 Sep 2004 10:33:53 +0200 palma_g (oln/d/28_dpoint.hh 1.20.2.1 600)
@@ -24,8 +24,8 @@
 // License.  This exception does not however invalidate any other
 // reasons why the executable file might be covered by the GNU General
 // Public License.
-#ifndef OLENA_CORE_ABSTRACT_DPOINT_HH
-# define OLENA_CORE_ABSTRACT_DPOINT_HH
+#ifndef OLN_CORE_ABSTRACT_DPOINT_HH
+# define OLN_CORE_ABSTRACT_DPOINT_HH
 
 # include <mlc/type.hh>
 # include <oln/core/coord.hh>
@@ -38,7 +38,7 @@
 {
 
   template<class Exact>
-  struct prop; // fwd declaration
+  struct props; // fwd declaration
 
   namespace abstract {
 
@@ -223,43 +223,43 @@
 
 
 
-  namespace internal
-  {
-
-    /*! \\class default_less< abstract::dpoint<Exact> >
-    **
-    ** The specialized version for abstract::dpoint.
-    */
-    template<class Exact>
-    struct default_less< abstract::dpoint<Exact> >
-    {
-
-      /*! \\brief Test if the coordinates of a dpoint l
-      ** are not greater than the coordinates of a dpoint r.
-      **
-      ** \\arg l A dpoint.
-      **
-      ** \\arg r Another dpoint.
-      **
-      ** \\return True if the coordinates of l are not greater
-      ** than the coordinates of r.
-      */
+//   namespace internal
+//   {
 
-      bool operator()(const abstract::dpoint<Exact>& l,
-		      const abstract::dpoint<Exact>& r) const
-      {
-	for (unsigned i = 0; i < oln_dim_val(Exact); ++i)
-	  if (l.nth(i) < r.nth(i))
-	    return true;
-	  else if (l.nth(i) > r.nth(i))
-	    return false;
-	return false;
-      }
-    };
-  } // internal
+//     /*! \\class default_less< abstract::dpoint<Exact> >
+//     **
+//     ** The specialized version for abstract::dpoint.
+//     */
+//     template<class Exact>
+//     struct default_less< abstract::dpoint<Exact> >
+//     {
+
+//       /*! \\brief Test if the coordinates of a dpoint l
+//       ** are not greater than the coordinates of a dpoint r.
+//       **
+//       ** \\arg l A dpoint.
+//       **
+//       ** \\arg r Another dpoint.
+//       **
+//       ** \\return True if the coordinates of l are not greater
+//       ** than the coordinates of r.
+//       */
+
+//       bool operator()(const abstract::dpoint<Exact>& l,
+// 		      const abstract::dpoint<Exact>& r) const
+//       {
+// 	for (unsigned i = 0; i < oln_dim_val(Exact); ++i)
+// 	  if (l.nth(i) < r.nth(i))
+// 	    return true;
+// 	  else if (l.nth(i) > r.nth(i))
+// 	    return false;
+// 	return false;
+//       }
+//     };
+//   } // internal
 } // end of oln
 
 
 #include \"dpoint.hxx\"
 
-#endif // ! OLENA_CORE_ABSTRACT_DPOINT_HH
+#endif // ! OLN_CORE_ABSTRACT_DPOINT_HH
Index: olena/oln/core/macros.hh
--- olena/oln/core/macros.hh Mon, 13 Sep 2004 22:08:03 +0200 van-vl_n (oln/c/39_macros.hh 1.5.2.1 600)
+++ olena/oln/core/macros.hh Tue, 14 Sep 2004 11:39:32 +0200 palma_g (oln/c/39_macros.hh 1.5.2.1 600)
@@ -41,14 +41,27 @@
 
 
 
-# define oln_point_type(E)		typename oln::prop<E>::point_type
-# define oln_point_type_(E)		oln::prop<E>::point_type
+# define oln_point_type(E)		typename oln::props<E>::point_type
+# define oln_point_type_(E)		oln::props<E>::point_type
 
-# define oln_dpoint_type(E)		typename oln::prop<E>::dpoint_type
-# define oln_dpoint_type_(E)	        oln::prop<E>::dpoint_type
+# define oln_dpoint_type(E)		typename oln::props<E>::dpoint_type
+# define oln_dpoint_type_(E)	        oln::props<E>::dpoint_type
 
 
-# define oln_dim_val(E)			oln::prop<E>::dim
-# define oln_dim_val_(E)	        oln::prop<E>::dim
+# define oln_dim_val(E)			oln::props<E>::dim_value
+# define oln_dim_val_(E)	        oln::props<E>::dim_value
+
+# define oln_concrete_type(E)		typename oln::props<E>::concrete_type
+# define oln_concrete_type_(E)		oln::props<E>::concrete_type
+
+# define oln_neighborhood_type(E)	typename oln::props<E>::neighborhood_type
+# define oln_neighborhood_type_(E)	oln::props<E>::neighborhood_type
+
+# define oln_window_type(E)		typename oln::props<E>::window_type
+# define oln_window_type_(E)		oln::props<E>::window_type
+
+# define oln_flat_se_type(E)		typename oln::props<E>::window_type
+# define oln_flat_se_type_(E)		oln::props<E>::flat_se_type
+
 
 #endif // OLENA_CORE_MACROS_HH
Index: olena/oln/core/neighborhood1d.hh
--- olena/oln/core/neighborhood1d.hh Fri, 13 Aug 2004 19:03:16 +0200 levill_r (oln/c/37_neighborho 1.20 600)
+++ olena/oln/core/neighborhood1d.hh Tue, 14 Sep 2004 12:39:29 +0200 palma_g (oln/c/37_neighborho 1.21 640)
@@ -1,12 +1,13 @@
-// Copyright (C) 2001, 2002, 2003, 2004  EPITA Research and Development Laboratory
+// Copyright (C) 2001, 2002, 2003, 2004 EPITA Research and Development
+// Laboratory
 //
 // This file is part of the Olena Library.  This library is free
 // software; you can redistribute it and/or modify it under the terms
 // of the GNU General Public License version 2 as published by the
 // Free Software Foundation.
 //
-// This library is distributed in the hope that it will be useful,
-// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// This library is distributed in the hope that it will be useful, but
+// WITHOUT  ANY  WARRANTY;  without   even  the  implied  warranty  of
 // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 // General Public License for more details.
 //
@@ -25,196 +26,44 @@
 // reasons why the executable file might be covered by the GNU General
 // Public License.
 
-#ifndef OLENA_CORE_NEIGHBORHOOD1D_HH
-# define OLENA_CORE_NEIGHBORHOOD1D_HH
+#ifndef OLN_CORE_NEIGHBORHOOD1D_HH
+# define OLN_CORE_NEIGHBORHOOD1D_HH
 
-# include <oln/core/abstract/neighborhoodnd.hh>
-# include <oln/core/winiter.hh>
-# include <oln/core/accum.hh>
-# include <oln/core/window1d.hh>
-# include <algorithm>
+# include <oln/core/dpoint1d.hh>
+# include <oln/core/neighborhood_nd.hh>
 
 namespace oln {
 
-  class neighborhood1d; // forward declaration
-
-  /*!
-  ** \\brief Traits for neighborhood1d.
-  */
   template<>
-  struct struct_elt_traits<neighborhood1d>: public
-  struct_elt_traits<abstract::neighborhoodnd<neighborhood1d> >
-  {
-    enum { dim = 1 }; ///< Dimension.
-    typedef point1d point_type; ///< Type of point.
-    typedef dpoint1d dpoint_type; ///< Type of dpoint (move).
-    typedef winiter< neighborhood1d > iter_type; ///< Type of iterator.
-    typedef winneighb< neighborhood1d > neighb_type; ///< Type of neighbor.
-    typedef window1d win_type; ///< Type of window.
-  };
-
-  /*!
-  ** \\brief Neighborhood 1 dimension.
-  **
-  ** It looks like structuring elements but here, when
-  ** you add an element, you add its opposite.
-  ** Points (dpoint) have 1 dimension.
-  **
-  */
-  class neighborhood1d :
-    public abstract::neighborhoodnd< neighborhood1d >
-  {
-  public:
-
-    typedef abstract::neighborhoodnd< neighborhood1d > super_type;
-    ///< Super type.
-    typedef neighborhood1d self_type; ///< Self type.
-
-    /*!
-    ** \\brief The associate image's type of iterator (move point).
-    ** \\warning Prefer the macros oln_iter_type(Pointable) and
-    ** oln_iter_type_(Pointable) (the same without the 'typename' keyword)
-    */
-    typedef struct_elt_traits< self_type >::iter_type   iter_type;
-    typedef struct_elt_traits< self_type >::neighb_type	neighb_type;
-
-    /*!
-    ** \\brief The associate image's type of dpoint (move point).
-    ** \\warning Prefer the macros oln_dpoint_type(Pointable) and
-    ** oln_dpoint_type_(Pointable) (the same without the 'typename' keyword)
-    */
-    typedef struct_elt_traits< self_type >::dpoint_type dpoint_type;
-
-    friend class abstract::window_base<abstract::neighborhood<neighborhood1d>, neighborhood1d>;
-
-    /*!
-    ** \\brief Add a dpoint (move point) to the neighborhood.
-    ** \\arg dp The new point.
-    **
-    ** Add a new member to the neighborhood. This point must be of 1
-    ** dimension.
-    */
-    neighborhood1d&
-    add(const dpoint_type& dp)
+  struct neighborhood<1> : public abstract::neighborhood_nd< neighborhood<1> >
     {
-      this->exact().add_(dp);
-      return this->exact().add_(-dp);
-    }
-
-    /*!
-    ** \\brief Add a point by coordinates to the neighborhood.
-    ** \\arg col The coordinate of the new point (1 dimension).
-    **
-    ** Add a new member by its coordinates to the neighborhood.
-    ** The coordinates are only the column number because the neighborhood has
-    ** 1 dimension.
-    */
-    neighborhood1d&
-    add(coord col)
-    {
-      return this->add(dpoint_type(col));
-    }
+    typedef abstract::neighborhood_nd< neighborhood<1> >	super;
 
-    /*!
-    ** \\brief Construct a neighborhood of 1 dimension.
-    */
-    neighborhood1d() : super_type()
-    {}
-
-    /*!
-    ** \\brief Construct a neighborhood of 1 dimension.
-    ** \\arg size Reserve 'size' elements for the neighborhood.
-    */
-    neighborhood1d(unsigned size) : super_type(size)
-    {}
-
-    /*!
-    ** \\brief Construct a neighborhood of 1 dimension.
-    ** \\arg n Add 'n' elements to the neighborhood.
-    ** \\arg crd Coordinates of the 'n' elements.
-    */
-    neighborhood1d(unsigned n, const coord crd[]) : super_type()
+    neighborhood& add(coord index)
     {
-      for (unsigned i = 0; i < n; ++i)
-	add(dpoint_type(crd[i]));
-    }
-
-    /// Return the name of the type.
-    static std::string
-    name()
-    {
-      return std::string(\"neighborhood1d\");
-    }
-
-  protected:
-
-    /*!
-    ** \\brief Update delta.
-    ** \\arg dp a move point.
-    ** \\return Delta.
-    **
-    ** If the point is the biggest element of the neighborhood,
-    ** then this point is assigned to delta.
-    */
-    coord
-    delta_update_(const dpoint_type& dp)
-    {
-      delta_(abs(dp.col()));
-      return delta_;
+      // FIXME: below, \"this->super::\" is required for the call
+      // to \"add\" to be resolved!
+      return this->super::add(dpoint1d(index));
     }
 
   };
 
+  typedef neighborhood<1>	neighborhood1d;
 
-  // standard neighborhood
-
-  /*!
-  ** \\brief Create a neighborhood (1 dimension) with 1 element : 1.
-  ** \\return The new neighborhood.
-  */
-  inline const neighborhood1d&
-  neighb_c2()
+  const neighborhood1d c2()
   {
-    static const coord crd[] = {  1 };
-    static const neighborhood1d neighb(1, crd);
-    return neighb;
-  }
-
-  /*!
-  ** \\brief Create a neighborhood (1 dimension).
-  ** \\arg width The width.
-  ** \\return The new neighborhood.
-  ** \\pre width >= 3.
-  ** \\pre width % 2 == 1.
-  **
-  ** Add elements of coordinates 1, ..., width / 2.
-  */
-  inline neighborhood1d
-  mk_neighb_segment(unsigned width)
+    static bool flower = true;
+    static neighborhood1d nbh;
+    if (flower)
   {
-    precondition(width>= 3 && (width % 2) == 1);
-    neighborhood1d neighb(width);
-    int half_ncols = width / 2;
-    for (coord col = 1; col <= half_ncols; ++col)
-	neighb.add(col);
-    return neighb;
+	nbh.add(-1).add(1);
+	flower = false;
   }
-
-  /*!
-  ** \\brief Convert a neighborhood (1 dimension) to a window (1 dimension).
-  ** \\arg n The neighborhood to convert.
-  ** \\return The new window.
-  */
-  inline window1d
-  mk_win_from_neighb(const neighborhood1d& n)
-  {
-    window1d win(n.card());
-    for (unsigned i = 0; i < n.card(); ++i)
-      win.add(n.dp(i));
-    return win;
+    return nbh;
   }
 
 
-} // end of oln
+} // end of namespace oln
+
 
-#endif // OLENA_CORE_NEIGHBORHOOD1D_HH
+#endif // ndef PROTO_OLN_CORE_NEIGHBORHOOD1D_HH
Index: olena/oln/core/neighborhood2d.hh
--- olena/oln/core/neighborhood2d.hh Fri, 13 Aug 2004 19:03:16 +0200 levill_r (oln/c/36_neighborho 1.22 600)
+++ olena/oln/core/neighborhood2d.hh Tue, 14 Sep 2004 12:39:40 +0200 palma_g (oln/c/36_neighborho 1.23 640)
@@ -1,12 +1,13 @@
-// Copyright (C) 2001, 2002, 2003, 2004  EPITA Research and Development Laboratory
+// Copyright (C) 2001, 2002, 2003, 2004 EPITA Research and Development
+// Laboratory
 //
 // This file is part of the Olena Library.  This library is free
 // software; you can redistribute it and/or modify it under the terms
 // of the GNU General Public License version 2 as published by the
 // Free Software Foundation.
 //
-// This library is distributed in the hope that it will be useful,
-// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// This library is distributed in the hope that it will be useful, but
+// WITHOUT  ANY  WARRANTY;  without   even  the  implied  warranty  of
 // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 // General Public License for more details.
 //
@@ -25,233 +26,56 @@
 // reasons why the executable file might be covered by the GNU General
 // Public License.
 
-#ifndef OLENA_CORE_NEIGHBORHOOD2D_HH
-# define OLENA_CORE_NEIGHBORHOOD2D_HH
+#ifndef OLN_CORE_NEIGHBORHOOD2D_HH
+# define OLN_CORE_NEIGHBORHOOD2D_HH
 
-# include <oln/core/abstract/neighborhoodnd.hh>
-# include <oln/core/winiter.hh>
-# include <oln/core/accum.hh>
-# include <oln/core/window2d.hh>
-# include <oln/io/readable.hh>
-# include <algorithm>
+# include <oln/core/neighborhood_nd.hh>
+# include <oln/core/dpoint2d.hh>
 
-namespace oln {
 
-  class neighborhood2d; // forward declaration
+namespace oln {
 
-  /*!
-  ** \\brief Traits for neighborhood2d.
-  */
   template<>
-  struct struct_elt_traits<neighborhood2d>: public
-  struct_elt_traits<abstract::neighborhoodnd<neighborhood2d> >
-  {
-    enum { dim = 2 }; ///< Dimension.
-    typedef point2d point_type; ///< Type of point.
-    typedef dpoint2d dpoint_type; ///< Type of dpoint (move).
-    typedef winiter< neighborhood2d > iter_type; ///< Type of iterator.
-    typedef winneighb< neighborhood2d > neighb_type; ///< Type of neighbor.
-    typedef window2d win_type; ///< Type of window.
-  };
-
-  /*!
-  ** \\brief Neighborhood 2 dimensions.
-  **
-  ** It looks like structuring elements but here, when
-  ** you add an element, you add its opposite.
-  ** Points have 2 dimensions.
-  **
-  */
-  class neighborhood2d :
-    public abstract::neighborhoodnd< neighborhood2d >
+  struct neighborhood<2> : public abstract::neighborhood_nd< neighborhood<2> >
   {
-  public:
-
-    typedef abstract::neighborhoodnd< neighborhood2d > super_type;
-    ///< Super type.
-    typedef neighborhood2d self_type; ///< Self type.
-
-    /*!
-    ** \\brief The associate image's type of iterator.
-    ** \\warning Prefer the macros oln_iter_type(Iterable) and
-    ** oln_iter_type_(Iterable) (the same without the 'typename' keyword)
-    */
-    typedef struct_elt_traits< self_type >::iter_type   iter_type;
-
-    typedef struct_elt_traits< self_type >::neighb_type	neighb_type;
-
-    /*!
-    ** \\brief The associate image's type of dpoint (move point).
-    ** \\warning Prefer the macros oln_dpoint_type(Pointable) and
-    ** oln_dpoint_type_(Pointable) (the same without the 'typename' keyword)
-    */
-    typedef struct_elt_traits< self_type >::dpoint_type dpoint_type;
-
-    friend class abstract::window_base<abstract::neighborhood<neighborhood2d>, neighborhood2d>;
-
-    /*!
-    ** \\brief Add a dpoint (move point) to the neighborhood.
-    ** \\arg dp The new point.
-    **
-    ** Add a new member to the neighborhood. This point must be of 2
-    ** dimensions.
-    */
-    neighborhood2d&
-    add(const dpoint_type& dp)
+    neighborhood& add(coord row, coord col)
     {
-      this->exact().add_(dp);
-      return this->exact().add_(-dp);
+      // FIXME: below, \"this->super::\" is required for the call
+      // to \"add\" to be resolved!
+      return this->add(dpoint2d(row, col));
     }
 
-    /*!
-    ** \\brief Add a point by coordinates to the neighborhood.
-    ** \\arg row The coordinates of the new point.
-    ** \\arg col The coordinates of the new point.
-    **
-    ** Add a new member by its coordinates to the neighborhood.
-    ** The coordinates have 2 dimensions.
-    */
-    neighborhood2d&
-    add(coord row, coord col)
-    {
-      return this->add(dpoint_type(row, col));
-    }
+  };
 
-    /*!
-    ** \\brief Construct a neighborhood of 2 dimensions.
-    */
-    neighborhood2d() : super_type()
-    {}
-
-    /*!
-    ** \\brief Construct a neighborhood of 2 dimensions.
-    ** \\arg size Reserve 'size' elements for the neighborhood.
-    */
-    neighborhood2d(unsigned size) : super_type(size)
-    {}
-
-    /*!
-    ** \\brief Construct a neighborhood of 2 dimensions.
-    ** \\arg n Add 'n' elements to the neighborhood.
-    ** \\arg crd Coordinates of the 'n' elements.
-    */
-    neighborhood2d(unsigned n, const coord crd[]) : super_type(n)
-    {
-      for (unsigned i = 0; i < 2 * n; i += 2)
-	add(dpoint_type(crd[i], crd[i+1]));
-    }
+  typedef neighborhood<2>	neighborhood2d;
 
-    // Constructor used in io functions.
-    neighborhood2d(const io::internal::anything& r) : super_type()
+  const neighborhood2d c4()
     {
-      r.assign(*this);
-    }
-
-    /// Return the name of the type.
-    static std::string
-    name()
+    static bool flower = true;
+    static neighborhood2d nbh;
+    if (flower)
     {
-      return std::string(\"neighborhood2d\");
+	nbh.add(-1,0).add(0,-1).add(0,1).add(1,0);
+	flower = false;
     }
-
-  protected:
-
-    /*!
-    ** \\brief Update delta.
-    ** \\arg dp a deplacement point.
-    ** \\return Delta.
-    **
-    ** If the point is the biggest element of the neighborhood,
-    ** then this point is assigned to delta.
-    */
-    coord
-    delta_update_(const dpoint_type& dp)
-    {
-      delta_(abs(dp.row()));
-      delta_(abs(dp.col()));
-      return delta_;
+    return nbh;
     }
 
-  };
-
-  // std neighbs
-
-  /*!
-  ** \\brief Create a neighborhood (2 dimension) with 0,1, 1,0.
-  ** \\return The new neighborhood.
-  */
-  inline const neighborhood2d&
-  neighb_c4()
+  const neighborhood2d c8()
   {
-    static const coord crd[] = { 0,1,  1,0 };
-    static const neighborhood2d neighb(2, crd);
-    return neighb;
-  }
-
-
-  /*!
-  ** \\brief Create a neighborhood (2 dimension) with 4 coordinates:
-  ** 0,1, 1,1, 1,0, 1,-1.
-  ** \\return The new neighborhood.
-  */
-  inline const neighborhood2d&
-  neighb_c8()
+    static bool flower = true;
+    static neighborhood2d nbh;
+    if (flower)
   {
-    static const coord crd[] = { 0,1,  1,1,  1,0,  1,-1 };
-    static const neighborhood2d neighb(4, crd);
-    return neighb;
+	nbh = c4();
+	nbh.add(-1,-1).add(-1,1).add(1,-1).add(1,1);
+	flower = false;
   }
-
-  // mk_neighb's
-
-  /*!
-  ** \\brief Create a rectangular neighborhood (2 dimensions).
-  ** \\arg nrows Number of row.
-  ** \\arg ncols Number of column.
-  ** \\return The new neighborhood (2d).
-  ** \\pre nrows >= 3.
-  ** \\pre nrows % 2 == 1.
-  ** \\pre ncols >= 3.
-  ** \\pre ncols % 2 == 1.
-  */
-  inline neighborhood2d
-  mk_neighb_rectangle(unsigned nrows, unsigned ncols)
-  {
-    precondition(nrows >= 3 && (nrows % 2) == 1);
-    precondition(ncols >= 3 && (ncols % 2) == 1);
-    neighborhood2d neighb(nrows * ncols);
-    int half_nrows = nrows / 2, half_ncols = ncols / 2;
-    for (coord row = - half_nrows; row <= half_nrows; ++row)
-      for (coord col = (row <= 0)? 1 : 0; col <= half_ncols; ++col)
-	  neighb.add(row, col);
-    return neighb;
+    return nbh;
   }
 
-  /*!
-  ** \\brief Create a square neighborhood (2 dimensions).
-  ** \\arg width Number of colunm and row.
-  ** \\return The new neighborhood (2d).
-  */
-  inline neighborhood2d
-  mk_neighb_square(unsigned width)
-  {
-    return mk_neighb_rectangle(width, width);
-  }
 
-  /*!
-  ** \\brief Convert a neighborhood (2 dimensions) to a window (2 dimensions).
-  ** \\arg n The neighborhood to convert.
-  ** \\return The new window.
-  */
-  inline window2d
-  mk_win_from_neighb(const neighborhood2d& n)
-  {
-    window2d win(n.card());
-    for (unsigned i = 0; i < n.card(); ++i)
-      win.add(n.dp(i));
-    return win;
-  }
+} // end of namespace oln
 
-} // end of oln
 
-#endif // OLENA_CORE_NEIGHBORHOOD2D_HH
+#endif // ndef PROTO_OLN_CORE_NEIGHBORHOOD2D_HH
Index: olena/oln/core/neighborhood3d.hh
--- olena/oln/core/neighborhood3d.hh Fri, 13 Aug 2004 19:03:16 +0200 levill_r (oln/c/35_neighborho 1.21 600)
+++ olena/oln/core/neighborhood3d.hh Tue, 14 Sep 2004 12:40:28 +0200 palma_g (oln/c/35_neighborho 1.21 640)
@@ -1,12 +1,13 @@
-// Copyright (C) 2001, 2002, 2003, 2004  EPITA Research and Development Laboratory
+// Copyright (C) 2001, 2002, 2003, 2004 EPITA Research and Development
+// Laboratory
 //
 // This file is part of the Olena Library.  This library is free
 // software; you can redistribute it and/or modify it under the terms
 // of the GNU General Public License version 2 as published by the
 // Free Software Foundation.
 //
-// This library is distributed in the hope that it will be useful,
-// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// This library is distributed in the hope that it will be useful, but
+// WITHOUT  ANY  WARRANTY;  without   even  the  implied  warranty  of
 // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 // General Public License for more details.
 //
@@ -28,105 +29,24 @@
 #ifndef OLENA_CORE_NEIGHBORHOOD3D_HH
 # define OLENA_CORE_NEIGHBORHOOD3D_HH
 
-# include <oln/core/abstract/neighborhoodnd.hh>
-# include <oln/core/winiter.hh>
-# include <oln/core/accum.hh>
-# include <oln/core/window3d.hh>
-# include <algorithm>
+
+# include <oln/core/neighborhood_nd.hh>
+# include <oln/core/dpoint2d.hh>
 
 namespace oln {
 
-  class neighborhood3d; // forward declaration
 
-  /*!
-  ** \\brief Traits for neighborhood3d.
-  */
   template<>
-  struct struct_elt_traits<neighborhood3d>: public
-  struct_elt_traits<abstract::neighborhoodnd<neighborhood3d> >
-  {
-    enum { dim = 3 }; ///< Dimension.
-    typedef point3d point_type; ///< Type of point.
-    typedef dpoint3d dpoint_type; ///< Type of dpoint (move).
-    typedef winiter< neighborhood3d > iter_type; ///< Type of iterator.
-    typedef winneighb< neighborhood3d > neighb_type; ///< Type of neighbor.
-    typedef window3d win_type; ///< Type of window.
-  };
-
-  /*!
-  ** \\brief Neighborhood 3 dimensions.
-  **
-  ** It looks like structuring elements but here, when
-  ** you add an element, you add its opposite.
-  ** Points have 3 dimensions.
-  **
-  */
-  class neighborhood3d :
-    public abstract::neighborhoodnd< neighborhood3d >
-  {
-  public:
-
-    typedef abstract::neighborhoodnd< neighborhood3d > super_type;
-    ///< Super type.
-    typedef neighborhood3d self_type; ///< Self type.
-
-    /*!
-    ** \\brief The associate image's type of iterator.
-    ** \\warning Prefer the macros oln_iter_type(Iterable) and
-    ** oln_iter_type_(Iterable) (the same without the 'typename' keyword)
-    */
-    typedef struct_elt_traits< self_type >::iter_type   iter_type;
-    typedef struct_elt_traits< self_type >::neighb_type	neighb_type;
-
-    /*!
-    ** \\brief The associate image's type of dpoint (move point).
-    ** \\warning Prefer the macros oln_dpoint_type(Pointable) and
-    ** oln_dpoint_type_(Pointable) (the same without the 'typename' keyword)
-    */
-    typedef struct_elt_traits< self_type >::dpoint_type dpoint_type;
-
-    friend class abstract::window_base<abstract::neighborhood<neighborhood3d>, neighborhood3d>;
-
-    /*!
-    ** \\brief Add a dpoint (move point) to the neighborhood.
-    ** \\arg dp The new point.
-    **
-    ** Add a new member to the neighborhood. This point must be of 3
-    ** dimensions.
-    */
-    neighborhood3d&
-    add(const dpoint_type& dp)
+  struct neighborhood<3> : public abstract::neighborhood_nd< neighborhood<3> >
     {
-      this->exact().add_(dp);
-      return this->exact().add_(-dp);
-    }
-
-    /*!
-    ** \\brief Add a point by coordinates to the neighborhood.
-    ** \\arg slice The coordinates of the new point.
-    ** \\arg row The coordinates of the new point.
-    ** \\arg col The coordinates of the new point.
-    **
-    ** Add a new member by its coordinates to the neighborhood.
-    ** The coordinates have 3 dimensions.
-    */
-    neighborhood3d&
-    add(coord slice, coord row, coord col)
+    neighborhood& add(coord slice, coord row, coord col)
     {
       return this->add(dpoint3d(slice, row, col));
     }
-
     /*!
     ** \\brief Construct a neighborhood of 3 dimensions.
     */
-    neighborhood3d() : super_type()
-    {}
-
-    /*!
-    ** \\brief Construct a neighborhood of 3 dimensions.
-    ** \\arg size Reserve 'size' elements for the neighborhood.
-    */
-    neighborhood3d(unsigned size) : super_type(size)
+    neighborhood()
     {}
 
     /*!
@@ -134,40 +54,15 @@
     ** \\arg n Add 'n' elements to the neighborhood.
     ** \\arg crd Coordinates of the 'n' elements.
     */
-    neighborhood3d(unsigned n, const coord crd[]) : super_type()
+    neighborhood(unsigned n, const coord crd[]) : super_type()
     {
       for (unsigned i = 0; i < 3 * n; i += 3)
-	add(dpoint_type(crd[i], crd[i+1], crd[i+2]));
+	add(crd[i], crd[i+1], crd[i+2]);
     }
-
-    /// Return the name of the type.
-    static std::string
-    name()
-    {
-      return std::string(\"neighborhood3d\");
-    }
-
-  protected:
-
-    /*!
-    ** \\brief Update delta.
-    ** \\arg dp a deplacement point.
-    ** \\return Delta.
-    **
-    ** If the point is the biggest element of the neighborhood,
-    ** then this point is assigned to delta.
-    */
-    coord
-    delta_update_(const dpoint_type& dp)
-    {
-      delta_(abs(dp.slice()));
-      delta_(abs(dp.row()));
-      delta_(abs(dp.col()));
-      return delta_;
-    }
-
   };
 
+  typedef neighborhood<3>	neighborhood3d;
+
   // std neighb
 
   /*!
Index: olena/oln/core/abstract/neighborhood.hh
--- olena/oln/core/abstract/neighborhood.hh Mon, 29 Mar 2004 09:53:11 +0200 odou_s (oln/c/38_neighborho 1.23 600)
+++ olena/oln/core/abstract/neighborhood.hh Tue, 14 Sep 2004 12:41:25 +0200 palma_g (oln/c/38_neighborho 1.24 640)
@@ -1,12 +1,13 @@
-// Copyright (C) 2001, 2002, 2003, 2004  EPITA Research and Development Laboratory
+// Copyright (C) 2001, 2002, 2003, 2004 EPITA Research and Development
+// Laboratory
 //
 // This file is part of the Olena Library.  This library is free
 // software; you can redistribute it and/or modify it under the terms
 // of the GNU General Public License version 2 as published by the
 // Free Software Foundation.
 //
-// This library is distributed in the hope that it will be useful,
-// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// This library is distributed in the hope that it will be useful, but
+// WITHOUT  ANY  WARRANTY;  without   even  the  implied  warranty  of
 // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 // General Public License for more details.
 //
@@ -25,254 +26,55 @@
 // reasons why the executable file might be covered by the GNU General
 // Public License.
 
-#ifndef OLENA_CORE_ABSTRACT_NEIGHBORHOOD_HH
-# define OLENA_CORE_ABSTRACT_NEIGHBORHOOD_HH
+#ifndef OLN_CORE_ABSTRACT_NEIGHBORHOOD_HH
+# define OLN_CORE_ABSTRACT_NEIGHBORHOOD_HH
 
-# include <mlc/type.hh>
-# include <oln/core/abstract/dpoint.hh>
-# include <oln/core/abstract/struct_elt.hh>
+#include <oln/core/abstract/dpoint_set.hh>
+#include <oln/core/abstract/flat_se.hh>
 
 namespace oln {
 
   namespace abstract {
-    template<class Exact>
-    struct neighborhood; // forward declaration
-  } // end of abstract
 
-  /*!
-  ** \\brief Traits for abstract::neighborhood.
-  */
-  template<class Exact>
-  struct struct_elt_traits<abstract::neighborhood<Exact> >
-  {
-    typedef abstract::neighborhood<Exact> abstract_type;
-  };
-
-  namespace abstract
-  {
-
-    /*!
-    **
-    ** \\brief Neighborhood.
-    **
-    ** It looks like structuring elements but here, when
-    ** you add an element, you add its opposite.
-    ** This abstract class defines several virtual methods for his
-    ** subclasses. Its goal is to deal with a set of deplacement points.
-    **
-    */
-    template<class Exact>
-    struct neighborhood : public mlc_hierarchy::any<Exact>
-    {
-      typedef Exact exact_type; ///< Set the exact type.
-      typedef neighborhood<Exact> self_type; ///< Set its type.
-
-      /*!
-      ** \\brief The associate image's type of iterator.
-      ** \\warning Prefer the macros oln_iter_type(Iterable) and
-      ** oln_iter_type_(Iterable) (the same without the 'typename' keyword)
-      */
-      typedef typename struct_elt_traits<Exact>::iter_type iter_type;
-
-      typedef typename struct_elt_traits<Exact>::neighb_type neighb_type;
-      ///< Set the neighborhood type.
-      typedef typename struct_elt_traits<Exact>::win_type win_type;
-      ///< Set the window type.
-
-      /*!
-      ** \\brief The associate image's type of dpoint (move point).
-      ** \\warning Prefer the macros oln_dpoint_type(Pointable) and
-      ** oln_dpoint_type_(Pointable) (the same without the 'typename' keyword)
-      */
-      typedef typename struct_elt_traits<Exact>::dpoint_type dpoint_type;
-
-      typedef typename struct_elt_traits<Exact>::abstract_type abstract_type;
-      ///< Set the abstract type.
-
-      enum { dim = struct_elt_traits<Exact>::dim };
-      ///< Set the dim of the points of the neighborhood.
-
-      /// Return the name of the type.
-      static std::string
-      name()
+    template <typename E>
+    struct neighborhood: public dpoint_set<E>
       {
-	return std::string(\"neighborhood<\") + Exact::name() + \">\";
-      }
-
-      /*!
-      ** \\brief Test if the set of points contains this one.
-      ** \\arg dp a dpoint (deplacement point).
-      ** \\return True if the set of points contains this dpoint.
-      */
-      bool
-      has(const abstract::dpoint<dpoint_type>& dp) const
-      {
-	return this->exact().has_(dp.exact());
-      }
-
-      /*!
-      ** \\brief Get the number of points.
-      ** \\return The number of points.
-      */
-      unsigned
-      card() const
-      {
-	return this->exact().card_();
-      }
-
-      /*!
-      ** \\brief Test if the neighborhood is centered.
-      ** \\return True if it's centered.
-      **
-      ** Neighborhood are centered when they contains at least one
-      ** element.
-      */
-      bool
-      is_centered() const
-      {
-	return this->exact().is_centered_();
-      }
-
-      /*!
-      ** \\brief Get the nth element of the neighborhood.
-      ** \\arg i The nth.
-      ** \\return The nth dpoint.
-      */
-      const dpoint_type
-      dp(unsigned i) const
-      {
-	return this->exact()[i];
-      }
-
-      /*!
-      ** \\brief Compare two sets of structuring elements.
-      ** \\arg win The structuring elements to compare.
-      ** \\return True if they are the same.
-      */
-      bool
-      operator==(const self_type& win) const
-      {
-	return this->exact().is_equal(win.exact());
-      }
-
-      /*!
-      ** \\brief Get the delta of the neighborhood.
-      ** \\return Delta.
-      **
-      ** Delta is the biggest element of the neighborhood.
-      */
-      coord
-      delta() const
-      {
-	return this->exact().get_delta();
-      }
-
-      /*!
-      ** \\brief Get the nth element of the neighborhood.
-      ** \\arg i The nth.
-      ** \\return The nth dpoint.
-      */
-      const dpoint_type
-      operator[](unsigned i) const
-      {
-	return this->exact().at(i);
-      }
-
       /*!
       ** \\brief Add a point to the neighborhood.
       ** \\arg dp The new point.
+      ** \\pre !dp.is_centered().
       **
       ** Add a new member to the neighborhood.
       */
-      exact_type&
-      add(const abstract::dpoint<dpoint_type>& dp)
+      E& add_impl(const oln_dpoint_type(E)& dp)
       {
-	this->exact().add_(dp.exact());
-	return this->exact().add_(-dp.exact());
+	precondition(!dp.is_centered());
+	this->sdps_.insert(dp);
+	this->sdps_.insert(-dp);
+	this->change_ = true;
+	return this->exact();
       }
 
-
-      // obsolete
-//       exact_type
-//       operator-() const
-//       {
-// 	return this->exact();
-//       }
-
-    protected:
-
-      /*!
-      ** \\brief Set neighborhood to opposite.
-      **
-      ** Each point of neighborhood is assigned to its opposite.
-      **
-      */
-      void
-      sym()
-      {
-	this->exact().sym_();
-      }
-
-      /*!
-      ** \\brief Do nothing, used only by sub-classes
-      */
-      neighborhood()
-      {}
-    };
-
-  } // end of abstract
-
-  /*!
-  ** \\brief Compute intersection between two neighborhood
-  */
-  template<class E>
-  inline E
-  inter(const abstract::neighborhood<E> &lhs,
-	const abstract::neighborhood<E> &rhs)
+      const oln_flat_se_type(E) flat_se() const
   {
-    E neighb;
-    for (unsigned j = 0; j < rhs.card(); ++j)
-      if (lhs.has(rhs.dp(j)) && ! neighb.has(rhs.dp(j)))
-	neighb.add(rhs.dp(j));
-    return neighb;
+	oln_flat_se_type(E) win;
+	win.clone(*this);
+	return win;
   }
 
-  /*!
-  ** \\brief Compute union between two neighborhood
-  */
-  template<class E>
-  inline E
-  uni(const abstract::neighborhood<E> &lhs,
-      const abstract::neighborhood<E> &rhs)
+      // backward compatibility
+      const oln_window_type(E) window() const
   {
-    E neighb;
-    for (unsigned j = 0; j < rhs.card(); ++j)
-	if (! neighb.has(rhs.dp(j)))
-	  neighb.add(rhs.dp(j));
-    for (unsigned j = 0; j < lhs.card(); ++j)
-      if (! neighb.has(lhs.dp(j)))
-	neighb.add(lhs.dp(j));
-      return neighb;
+	return flat_se();
   }
 
-  /*!
-  ** \\brief Construct a window from a neighborhood.
-  */
-  template<class E>
-  inline typename struct_elt_traits<E>::win_type
-  mk_win_from_neighb(const abstract::neighborhood<E>& n)
-  {
-    typename struct_elt_traits<E>::win_type win(n.card());
-    for (unsigned i = 0; i < n.card(); ++i)
-      win.add(n.dp(i));
-    return win;
-  }
-
-# define oln_neighb_type(Neighbable)		\\
-typename Neighbable::neighb_type
+    protected:
+      neighborhood() {}
+    };
 
+  } // end of namespace abstract
 
-} // end of oln
+} // end of namespace oln
 
 
-#endif // OLENA_CORE_ABSTRACT_NEIGHBORHOOD_HH
+#endif // !OLN_CORE_ABSTRACT_NEIGHBORHOOD_HH
Index: olena/oln/core/abstract/point.hh
--- olena/oln/core/abstract/point.hh Mon, 13 Sep 2004 22:08:03 +0200 van-vl_n (oln/c/33_point.hh 1.16.2.1 600)
+++ olena/oln/core/abstract/point.hh Tue, 14 Sep 2004 10:02:23 +0200 palma_g (oln/c/33_point.hh 1.16.2.1 600)
@@ -236,40 +236,40 @@
 
 
 
-  namespace internal
-  {
+//   namespace internal
+//   {
 
-    /*! \\class default_less< abstract::point<Exact> >
-    **
-    ** The specialized version for abstract::point.
-    */
-    template<class Exact>
-    struct default_less< abstract::point<Exact> >
-    {
-
-      /*! \\brief Test if the coordinates of a point l
-      ** are not greater than the coordinates of a point r.
-      **
-      ** \\arg l A point.
-      **
-      ** \\arg r Another point.
-      **
-      ** \\return True if the coordinates of l are not greater
-      ** than the coordinates of r.
-      */
-
-      bool operator()(const abstract::point<Exact>& l,
-		      const abstract::point<Exact>& r) const
-      {
-	for (unsigned i = 0; i < oln_dim_val(Exact); ++i)
-	  if (l.nth(i) < r.nth(i))
-	    return true;
-	  else if (l.nth(i) > r.nth(i))
-	    return false;
-	return false;
-      }
-    };
-  } // internal
+//     /*! \\class default_less< abstract::point<Exact> >
+//     **
+//     ** The specialized version for abstract::point.
+//     */
+//     template<class Exact>
+//     struct default_less< abstract::point<Exact> >
+//     {
+
+//       /*! \\brief Test if the coordinates of a point l
+//       ** are not greater than the coordinates of a point r.
+//       **
+//       ** \\arg l A point.
+//       **
+//       ** \\arg r Another point.
+//       **
+//       ** \\return True if the coordinates of l are not greater
+//       ** than the coordinates of r.
+//       */
+
+//       bool operator()(const abstract::point<Exact>& l,
+// 		      const abstract::point<Exact>& r) const
+//       {
+// 	for (unsigned i = 0; i < oln_dim_val(Exact); ++i)
+// 	  if (l.nth(i) < r.nth(i))
+// 	    return true;
+// 	  else if (l.nth(i) > r.nth(i))
+// 	    return false;
+// 	return false;
+//       }
+//     };
+//   } // internal
 } // end of oln
 
 
Index: olena/oln/core/abstract/struct_elt.hh
--- olena/oln/core/abstract/struct_elt.hh Mon, 29 Mar 2004 09:53:11 +0200 odou_s (oln/c/25_structelt. 1.24 600)
+++ olena/oln/core/abstract/struct_elt.hh Tue, 14 Sep 2004 11:10:52 +0200 palma_g (oln/c/25_structelt. 1.25 640)
@@ -25,53 +25,21 @@
 // reasons why the executable file might be covered by the GNU General
 // Public License.
 
-#ifndef OLENA_CORE_STRUCT_ELT_HH
-# define OLENA_CORE_STRUCT_ELT_HH
+#ifndef OLN_CORE_ABSTRACT_STRUCT_ELT_HH
+# define OLN_CORE_ABSTRACT_STRUCT_ELT_HH
 
-# include <mlc/type.hh>
-# include <oln/core/coord.hh>
-# include <oln/core/abstract/dpoint.hh>
-
-namespace oln {
-
-  namespace abstract {
-    template<class Exact>
-    struct struct_elt; // forwarding declaration
-
-  } // end of abstract
-
-  template<class Exact>
-  struct struct_elt_traits;
-
-  /*!
-  ** \\brief Traits for abstract::struct_elt.
-  */
-  template<class Exact>
-  struct struct_elt_traits<abstract::struct_elt<Exact> >
+# include <oln/core/abstract/dpoint_set.hh>
+# include <oln/core/macros.hh>
+namespace oln
   {
-    typedef abstract::struct_elt<Exact> abstract_type;
-    ///< Defines the abstract type of the structuring element.
-  };
+  template <typename Exact>
+  struct props;
 
-  namespace abstract {
-
-    /*!
-    ** Structuring elements (set of dpoints).
-    **
-    ** This abstract class defines several virtual methods for its
-    ** subclasses. Its goal is to deal with a set of 'move' points.
-    */
+  namespace abstract
+  {
     template<class Exact>
-    struct struct_elt : public mlc_hierarchy::any< Exact >
+    struct struct_elt: public dpoint_set<Exact>
     {
-      enum { dim = struct_elt_traits<Exact>::dim };
-      ///< Set the dim of the image from which points com.
-
-      typedef struct_elt<Exact> self_type;
-      ///< Set the exact self type of the class.
-      typedef typename struct_elt_traits<Exact>::abstract_type abstract_type;
-      ///< Set the abstract type of hisself.
-
       /// Return the name of the type.
       static std::string
       name()
@@ -79,33 +47,6 @@
 	return std::string(\"struct_elt<\") + Exact::name() + \">\";
       }
 
-      typedef typename struct_elt_traits<Exact>::point_type point_type;
-      ///< Set the point type of the image from which points come.
-      typedef typename struct_elt_traits<Exact>::dpoint_type dpoint_type;
-      ///< Set the dpoint type.
-      typedef Exact exact_type;
-
-      /*!
-      ** \\brief Test if the set of points contains this one.
-      ** \\arg dp a dpoint (deplacement point).
-      ** \\return True if the set of points contains this dpoint.
-      */
-      bool
-      has(const abstract::dpoint<dpoint_type>& dp) const
-      {
-	return this->exact().has_(dp.exact());
-      }
-
-      /*!
-      ** \\brief Get the number of points.
-      ** \\return The number of points.
-      */
-      unsigned
-      card() const
-      {
-	return this->exact().card_();
-      }
-
       /*!
       ** \\brief Test if the structuring elements is centered.
       ** \\return True if it's centered.
@@ -115,103 +56,50 @@
       bool
       is_centered() const
       {
-	return this->exact().is_centered_();
+	return dispatch(is_centered)();
       }
 
-      /*!
-      ** \\brief Add a point to the structuring elements.
-      **
-      ** Add a new member to the structuring elements.
-      **
-      ** \\warning Here for convenience (see morpho algorithms).
-      ** Work with w_windows (associate a default weight set to 1).
-      */
-      exact_type&
-      add(const abstract::dpoint<dpoint_type>& dp)
+      oln_concrete_type(Exact) image() const
       {
-	return this->exact().add_dp(dp);
+	return oln_dispatch(image)();
       }
 
-      /*!
-      ** \\brief Get the nth structuring element.
-      ** \\arg i The nth.
-      ** \\return The nth dpoint.
-      */
-      dpoint_type
-      dp(unsigned i) const
-      {
-	return this->exact().at(i);
-      }
-
-      /*!
-      ** \\brief Compare two sets of structuring elements.
-      ** \\arg win The structuring elements to compare.
-      ** \\return True if they are the same.
-      */
-      bool
-      operator==(const self_type& win) const
-      {
-	return this->exact().is_equal(win.exact());
-      }
-
-      /*!
-      ** \\brief Get the delta of the structuring elements.
-      ** \\return Delta.
-      **
-      ** Delta is the biggest element of the structuring elements.
-      */
-      coord
-      delta() const
-      {
-	return this->exact().get_delta();
-      }
-
-      /*!
-      ** \\brief Get the nth structuring element.
-      ** \\arg i The nth.
-      ** \\return The nth dpoint.
-      */
-      const dpoint_type
-      operator[](unsigned i) const
-      {
-	return this->exact().at(i);
-      }
+    };
 
       /*!
-      ** \\brief Set structuring elements to opposite.
-      **
-      ** Each point of structuring elements is assigned to its opposite.
+    ** \\brief Compute intersection between two se.
       */
-      exact_type
-      operator-() const
-      {
-	exact_type win(this->exact());
-	win.sym();
+    template<class E>
+    inline E
+    inter(const abstract::struct_elt<E>& lhs, const abstract::struct_elt<E>& rhs)
+    {
+      E win;
+      for (unsigned i = 0; i < lhs.card(); ++i)
+	if (rhs.has(lhs.dp(i)))
+	  win.add(lhs.dp(i));
+      for (unsigned j = 0; j < rhs.card(); ++j)
+	if (! win.has(rhs.dp(j)) && lhs.has(rhs.dp(j)))
+	  win.add(rhs.dp(j));
 	return win;
       }
 
-    protected:
-
       /*!
-      ** \\brief Set structuring elements to opposite.
-      **
-      ** Each point of structuring elements is assigned to its opposite.
+    ** \\brief Compute union between two se.
       */
-      void
-      sym()
-      {
-	return this->exact().sym_();
+    template<class E>
+    inline E
+    uni(const abstract::struct_elt<E>& lhs, const abstract::struct_elt<E>& rhs)
+    {
+      E win;
+      for (unsigned i = 0; i < lhs.card(); ++i)
+	win.add(lhs.dp(i));
+      for (unsigned j = 0; j < rhs.card(); ++j)
+	if (! win.has(rhs.dp(j)))
+	  win.add(rhs.dp(j));
+      return win;
       }
 
-      /*!
-      ** \\brief Do nothing, used only by sub-classes
-      */
-      struct_elt()
-      {}
-
-    };
-  } // end of abstract
-
-} // end of oln
+  } // !abstract
+} // !oln
 
-#endif // ! OLENA_CORE_STRUCT_ELT_HH
+#endif // ! OLN_CORE_STRUCT_ELT_HH
Index: olena/oln/core/point_nd.hh
--- olena/oln/core/point_nd.hh Mon, 13 Sep 2004 22:08:03 +0200 van-vl_n (oln/w/30_point_nd.h 1.1 644)
+++ olena/oln/core/point_nd.hh Tue, 14 Sep 2004 10:12:00 +0200 palma_g (oln/w/30_point_nd.h 1.1 644)
@@ -18,7 +18,7 @@
 #ifndef OLENA_CORE_POINT_HH
 # define OLENA_CORE_POINT_HH
 
-# include \"abstract/point.hh\"
+# include <oln/core/abstract/point.hh>
 
 namespace oln {
 
Index: olena/oln/core/dpoint_nd.hh
--- olena/oln/core/dpoint_nd.hh Mon, 13 Sep 2004 22:08:03 +0200 van-vl_n (oln/w/31_dpoint_nd. 1.1 644)
+++ olena/oln/core/dpoint_nd.hh Tue, 14 Sep 2004 11:24:16 +0200 palma_g (oln/w/31_dpoint_nd. 1.1 644)
@@ -18,7 +18,9 @@
 #ifndef OLENA_CORE_DPOINT_HH
 # define OLENA_CORE_DPOINT_HH
 
-# include \"abstract/dpoint.hh\"
+# include <oln/core/abstract/dpoint.hh>
+# include <oln/core/default_props.hh>
+# include <oln/core/dim_nd.hh>
 
 namespace oln {
 
@@ -32,10 +34,8 @@
   struct point; //fwd decl
 
   template <unsigned Dim>
-  struct prop<dpoint<Dim> >
+  struct props<dpoint<Dim> >: public default_props<dim<Dim> >
   {
-    enum {dim = Dim};
-    typedef point<Dim> point_type;
   };
 
 
Index: olena/oln/core/dim3d.hh
--- olena/oln/core/dim3d.hh Tue, 14 Sep 2004 12:53:38 +0200 palma_g ()
+++ olena/oln/core/dim3d.hh Mon, 13 Sep 2004 10:59:57 +0200 palma_g (oln/v/45_dim3d.hh 1.1 644)
@@ -0,0 +1,66 @@
+#ifndef PROTO_OLN_CORE_DIM3D_HH
+# define PROTO_OLN_CORE_DIM3D_HH
+
+# include <oln/core/abstract/dim.hh>
+
+namespace oln {
+
+  // fwd decls:
+
+  template <typename T> struct image3d;
+  struct image3d_size;
+  struct point3d;
+  struct dpoint3d;
+  struct fwd_iter3d;
+  struct bkd_iter3d;
+  struct neighborhood3d;
+  struct window3d;
+  struct fwd_niter3d;
+  // FIXME: to be continued
+
+
+  struct dim3d;
+
+  template <typename E>
+  struct props;
+
+  template <>
+  struct props <dim3d>
+  {
+    template <typename T>
+    struct concrete_type {
+      typedef image3d<T> ret;
+    };
+
+    enum { linbuf_value = false };
+
+    enum { dim_value = 3 };
+    typedef dim3d dim_type;
+
+    typedef image3d_size image_size_type;
+
+    typedef point3d point_type;
+    typedef dpoint3d dpoint_type;
+
+    typedef fwd_iter3d iter_type;
+    typedef fwd_iter3d fwd_iter_type;
+    typedef bkd_iter3d bkd_iter_type;
+
+    typedef neighborhood3d neighborhood_type;
+    typedef window3d window_type;
+
+    typedef fwd_niter3d niter_type;
+    typedef fwd_niter3d fwd_niter_type;
+//     typedef bkd_niter3d bkd_niter_type;
+
+    // FIXME: to be continued
+  };
+
+  struct dim3d : public abstract::dim< dim3d >
+  {
+  };
+
+} // end of namespace oln
+
+
+#endif // ndef PROTO_OLN_CORE_DIM3D_HH
Index: olena/oln/core/dim2d.hh
--- olena/oln/core/dim2d.hh Tue, 14 Sep 2004 12:53:38 +0200 palma_g ()
+++ olena/oln/core/dim2d.hh Fri, 10 Sep 2004 18:18:59 +0200 palma_g (oln/v/46_dim2d.hh 1.1 600)
@@ -0,0 +1,66 @@
+#ifndef PROTO_OLN_CORE_DIM2D_HH
+# define PROTO_OLN_CORE_DIM2D_HH
+
+# include <oln/core/abstract/dim.hh>
+
+namespace oln {
+
+  // fwd decls:
+
+  template <typename T> struct image2d;
+  struct image2d_size;
+  struct point2d;
+  struct dpoint2d;
+  struct fwd_iter2d;
+  struct bkd_iter2d;
+  struct neighborhood2d;
+  struct window2d;
+  struct fwd_niter2d;
+  // FIXME: to be continued
+
+
+  struct dim2d;
+
+  template <typename E>
+  struct props;
+
+  template <>
+  struct props <dim2d>
+  {
+    template <typename T>
+    struct concrete_type {
+      typedef image2d<T> ret;
+    };
+
+    enum { linbuf_value = false };
+
+    enum { dim_value = 2 };
+    typedef dim2d dim_type;
+
+    typedef image2d_size image_size_type;
+
+    typedef point2d point_type;
+    typedef dpoint2d dpoint_type;
+
+    typedef fwd_iter2d iter_type;
+    typedef fwd_iter2d fwd_iter_type;
+    typedef bkd_iter2d bkd_iter_type;
+
+    typedef neighborhood2d neighborhood_type;
+    typedef window2d window_type;
+
+    typedef fwd_niter2d niter_type;
+    typedef fwd_niter2d fwd_niter_type;
+//     typedef bkd_niter2d bkd_niter_type;
+
+    // FIXME: to be continued
+  };
+
+  struct dim2d : public abstract::dim< dim2d >
+  {
+  };
+
+} // end of namespace oln
+
+
+#endif // ndef PROTO_OLN_CORE_DIM2D_HH
Index: olena/oln/core/dim1d.hh
--- olena/oln/core/dim1d.hh Tue, 14 Sep 2004 12:53:38 +0200 palma_g ()
+++ olena/oln/core/dim1d.hh Tue, 14 Sep 2004 11:00:22 +0200 palma_g (oln/w/14_dim1d.hh 1.1 600)
@@ -0,0 +1,38 @@
+// Copyright (C) 2004  EPITA Research and Development Laboratory
+//
+// This  file is  part of  the Olena  Library.  This  library  is free
+// software; you can redistribute it  and/or modify it under the terms
+// of the  GNU General  Public License version  2 as published  by the
+// Free Software Foundation.
+//
+// This library is distributed in the hope that it will be useful, but
+// WITHOUT  ANY  WARRANTY;  without   even  the  implied  warranty  of
+// MERCHANTABILITY or  FITNESS FOR A PARTICULAR PURPOSE.   See the GNU
+// General Public License for more details.
+//
+// You should have  received a copy of the  GNU General Public License
+// along with  this library; see the  file COPYING.  If  not, write to
+// the Free Software Foundation, 59  Temple Place - Suite 330, Boston,
+// MA 02111-1307, USA.
+//
+// As a  special exception, you  may use this  file as part of  a free
+// software library without restriction.  Specifically, if other files
+// instantiate templates  or use macros or inline  functions from this
+// file, or  you compile  this file  and link it  with other  files to
+// produce  an executable,  this file  does  not by  itself cause  the
+// resulting  executable  to be  covered  by  the  GNU General  Public
+// License.   This exception  does  not however  invalidate any  other
+// reasons why the executable file might be covered by the GNU General
+// Public License.
+
+#ifndef OLN_CORE_DIM1D_HH
+# define OLN_CORE_DIM1D_HH
+
+
+namespace oln
+{
+  typedef dim<1>	dim1d;
+} // end of namespace oln
+
+
+#endif // ndef OLN_CORE_DIM1D_HH
Index: olena/oln/core/abstract/dim.hh
--- olena/oln/core/abstract/dim.hh Tue, 14 Sep 2004 12:53:38 +0200 palma_g ()
+++ olena/oln/core/abstract/dim.hh Tue, 14 Sep 2004 10:50:36 +0200 palma_g (oln/w/23_dim.hh 1.1 600)
@@ -0,0 +1,21 @@
+#ifndef OLN_CORE_ABSTRACT_DIM_HH
+# define OLN_CORE_ABSTRACT_DIM_HH
+
+# include <mlc/type.hh>
+
+
+namespace oln {
+  namespace abstract {
+
+    template <typename E>
+    struct dim : public mlc_hierarchy::any<E>
+    {
+    protected:
+      dim() {}
+    };
+
+  } // abstract
+} // oln
+
+
+#endif // !OLN_CORE_ABSTRACT_DIM_HH
Index: olena/oln/core/default_props.hh
--- olena/oln/core/default_props.hh Tue, 14 Sep 2004 12:53:38 +0200 palma_g ()
+++ olena/oln/core/default_props.hh Tue, 14 Sep 2004 11:39:05 +0200 palma_g (oln/w/34_default_pr  644)
@@ -0,0 +1,62 @@
+// Copyright (C) 2004  EPITA Research and Development Laboratory
+//
+// This  file is  part of  the Olena  Library.  This  library  is free
+// software; you can redistribute it  and/or modify it under the terms
+// of the  GNU General  Public License version  2 as published  by the
+// Free Software Foundation.
+//
+// This library is distributed in the hope that it will be useful, but
+// WITHOUT  ANY  WARRANTY;  without   even  the  implied  warranty  of
+// MERCHANTABILITY or  FITNESS FOR A PARTICULAR PURPOSE.   See the GNU
+// General Public License for more details.
+//
+// You should have  received a copy of the  GNU General Public License
+// along with  this library; see the  file COPYING.  If  not, write to
+// the Free Software Foundation, 59  Temple Place - Suite 330, Boston,
+// MA 02111-1307, USA.
+//
+// As a  special exception, you  may use this  file as part of  a free
+// software library without restriction.  Specifically, if other files
+// instantiate templates  or use macros or inline  functions from this
+// file, or  you compile  this file  and link it  with other  files to
+// produce  an executable,  this file  does  not by  itself cause  the
+// resulting  executable  to be  covered  by  the  GNU General  Public
+// License.   This exception  does  not however  invalidate any  other
+// reasons why the executable file might be covered by the GNU General
+// Public License.
+
+#ifndef OLN_CORE_DEFAULT_PROPS
+# define OLN_CORE_DEFAULT_PROPS
+# include <oln/core/macros.hh>
+
+namespace oln {
+
+  template <class Dim>
+  struct default_props
+  {
+    //  enum { linbuf_value = oln_linbuf_value(Dim) };
+    enum { dim_value = oln_dim_val(Dim) };
+
+    typedef Dim				dim_type;
+    //    typedef oln_image_size_type(Dim) image_size_type;
+
+    typedef oln_point_type(Dim)		point_type;
+    typedef oln_dpoint_type(Dim)	dpoint_type;
+
+    //    typedef oln_iter_type(Dim) iter_type;
+    //    typedef oln_fwd_iter_type(Dim) fwd_iter_type;
+    //typedef oln_bkd_iter_type(Dim) bkd_iter_type;
+
+    typedef oln_neighborhood_type(Dim)	neighborhood_type;
+    typedef oln_window_type(Dim)	window_type;
+    typedef oln_flat_se_type(Dim)	flat_se_type;
+
+    typedef oln_concrete_type(Dim)	concrete_type;
+ //    typedef oln_niter_type(Dim) niter_type;
+//     typedef oln_fwd_niter_type(Dim) fwd_niter_type;
+//
+    // typedef oln_bkd_niter_type(Dim) bkd_niter_type;
+  };
+} // !oln
+
+#endif // OLN_CORE_DEFAULT_PROPS

")
(New-Version-Log "")
(Checkin-Time "Tue, 14 Sep 2004 12:55:37 +0200")
(Checkin-Login palma_g)
;; diff-ignore tests/data/.*pbm$
;; diff-ignore .*\.pbm$
;; diff-ignore .*\.pgm$
;; diff-ignore .*\.pnm$
;; diff-ignore doc/doc/ref-morpho.tex$
;; diff-ignore doc/doc/ref-level.tex$
;; diff-ignore oln/oln/config/pconf-inc.in$
(Populate-Ignore ("~$"
                  "\\.\\(bak\\|old\\|rej\\|orig\\)$"
                  "\\.o$"
                  "\\.cmi$"
                  "\\.cmx$"
                  "\\.a$"
                  "\\.s$"
                  "\\.so$"
                  "\\.gz$"
                  "\\.out$"
                  "\\.err$"
                  "\\.log$"
                  "\\.pyc$"
                  "\\.cache$"
                  "\\.status$"
                  "\\.deps/"
                  "/Makefile$"
                  "^Makefile$"
                  "stamp-h\\([0-9]\\)\\?$"
                  "CVS/"
                  ".cvsignore$"
                  "obsolete/"
                  "/obsolete/"
                  "autom4te.cache"
                  "\\.html$"
                  "\\.png$"
                  "\\.pdf$"
                  "\\.eps$"
                  "tools/swilena/.*_wrap.cxx$"
                  "doc/ref/.*\\.pbm$"
                  "doc/ref/bin/.*$"
                  "doc/ref/html/.*$"
                  "doc/ref/oln-ref.\\(dvi\\|tmp\\|toc\\|pg\\|ps\\|ky\\|tp\\|vr\\|fn\\|cps\\?\\|aux\\|info\\)$"
                  "doc/dev/oln-dev.\\(dvi\\|tmp\\|toc\\|pg\\|ps\\|ky\\|tp\\|vr\\|fn\\|cps\\?\\|aux\\|info\\)$"
                  "doc/dev/version.texi$"
                  "src/tests/convert/.*-.*-.*$"
                  "\\.#"
                  "^#"
                  "/#"
                  "metalic/tests/check/defs$"
                  "integre/tests/check/defs$"
                  "olena/tests/check/defs$"
                  "\\(TAGS\\|tags\\)$"
                  "diffs.patch$"
                  "/Makefile.in$"
                  "^Makefile.in$"
		  "/makefile.swig"
                  "/\\(py-compile\\|missing\\|install-sh\\|mkinstalldirs\\|depcomp\\|mdate-sh\\)$"
                  "\\(texinfo\\.tex\\)$"
                  "^\\(.*/\\)\\?aclocal.m4$"
                  "/configure$"
                  "^configure$"
                  "utilities/morpho/morpho-rules.make$"
                  "doc/ref/filelists.make$"
                  "config.h\\(in\\)\\?$"
                  "doc/ref/ref-level.tex"
                  "doc/ref/ref-morpho.tex"
                  "utilities/.*\\.1$"
                  "^attic/"
                  "oln-"
                  "stamp-vti$"
                  "^\\(BUILD\\|FAQ\\|INSTALL\\|README\\|THANKS\\)$"
                  "olena/img/se9.ppbm"
                  "olena/img/neighbor.ppbm"
                  "^olena/tests/check/defs$"
                  "olena/oln/config/pconf.hh$"
                  "olena/img/lena.ppgm"
                  "olena/img/lena.pgm"
                  "olena/img/se.ppbm"
                  "olena/img/lena.pbm"
                  "olena/img/lena.pppm"
                  "olena/img/lena128.pgm"
                  "olena/img/lena.ppbm"
                  "olena/img/neighbor9.ppbm"
                  "^CODING_STYLE$"
                  "olena/img/lena16b.ppgm"
                  "olena/img/lena16b.pgm"
                  "^tools/swilena/src/.*\\.i"
                  "olena/img/lena1d.ppbm"
                  "olena/img/lena1d128.pgm"
                  "olena/img/lena1d.pppm"
                  "olena/img/lena3d.pgm"
                  "olena/img/lena3d.pbm"
                  "olena/img/lena1d16b.pgm"
                  "olena/img/lena1d16b.ppgm"
                  "olena/img/lena1d.ppgm"
                  "olena/img/lena1d.pgm"
                  "olena/img/lena1d.pbm"
                  "olena/img/lena1d16b.ppbm"
                  "\\.xvpics/"
                  "old/"))
(Project-Keywords)
(Files

  (ChangeLog (oln/o/33_ChangeLog 1.37.1.16.1.17.1.19.1.18 600))
  (doc/ChangeLog (oln/o/31_ChangeLog 1.38.1.7.1.5.1.14.1.16 600))
  (integre/ChangeLog (oln/q/35_ChangeLog 1.12.1.2.1.47 640))
  (metalic/ChangeLog (oln/q/30_ChangeLog 1.3.1.43 640))
  (olena/ChangeLog (oln/o/30_ChangeLog 1.27.1.36.1.3.1.11.1.5.1.64.1.47.1.93.1.27.1.2 640))
  (tools/ChangeLog (oln/o/32_ChangeLog 1.10.1.17 640))
  (tools/swilena/ChangeLog (oln/n/37_ChangeLog 1.7.1.39 640))

  (olena/ChangeLog.0 (oln/6_ChangeLog 1.50.1.98.1.5 640))
  (doc/ChangeLog.0 (oln/e/1_ChangeLog 1.31 640))
  (attic/tests-ChangeLog (oln/e/30_ChangeLog 1.52 640))

  (bootstrap.sh (oln/j/16_bootstrap. 1.11 750))

  (cleanup.sh (oln/o/29_cleanup.sh 1.6 750))

  (configure.ac (oln/3_configure. 1.47.1.1.1.1.1.4.1.15.1.16.1.7 600))

  (doc/demo/image.cc (oln/d/46_image.cc 1.8 640))
  (doc/demo/Makefile.am (oln/d/44_Makefile.a 1.16.1.2 640))
  (doc/demo/morpholena.cc (oln/d/43_morpholena 1.11 640))
  (olena/tests/morpho/tests/test-reconstruction (oln/e/22_test-recon 1.7.1.3.1.3 640))
  (doc/demo/tour.cc (oln/d/45_tour.cc 1.13 640))
  (doc/ref/bin () :directory)
  
  (doc/ref/Makefile.am (oln/d/51_Makefile.a 1.27.1.17.1.5 600))
  (doc/dev/oln-dev.texi (oln/j/1_oln-dev.te 1.6.1.6 640))
  (doc/ref/oln-ref.tex (oln/f/14_oln-ref.te 1.3.1.3 640))
  (doc/ref/integre-ref.tex (oln/g/34_ref-types. 1.12 640))
  (doc/Makefile.am (oln/e/0_Makefile.a 1.14 640))
  (doc/ref/processing.tpl (oln/d/48_processing 1.16 640))

  (Makefile.am (oln/n/32_Makefile.a 1.17.1.2.1.7 640))
  (NEWS (oln/0_NEWS 1.24 640))

  (olena/img/face_se.pbm (oln/n/17_face_se.pb 1.1 640) :no-keywords)
  (olena/img/lena256.pgm (oln/n/14_lena256.pg 1.1 640) :no-keywords)
  (olena/img/lena_dark.pgm (oln/n/13_lena_dark. 1.1 640) :no-keywords)
  (olena/img/lena.ppm (oln/n/10_lena.ppm 1.1 640) :no-keywords)
  (olena/img/Makefile.am (oln/o/34_Makefile.a 1.9 640) :no-keywords)
  ; (oln/img/Makefile.in ())
  (olena/img/map.pbm (oln/n/12_map.pbm 1.1 640) :no-keywords)
  (olena/img/neighbor9.pbm (oln/n/8_neighbor9. 1.1 640) :no-keywords)
  (olena/img/neighbor.pbm (oln/n/9_neighbor.p 1.1 640) :no-keywords)
  (olena/img/object.pbm (oln/n/11_object.pbm 1.1 640) :no-keywords)
  (olena/img/random.pgm (oln/n/7_random.pgm 1.1 640) :no-keywords)
  (olena/img/se9.pbm (oln/n/5_se9.pbm 1.1 640) :no-keywords)
  (olena/img/se.pbm (oln/n/6_se.pbm 1.1 640) :no-keywords)

  (olena/Makefile.am (oln/2_Makefile.a 1.30.1.1.1.2.1.10 640))
  (olena/oln/arith/internal/opdecls.hh (oln/b/22_opdecls.hh 1.19 640))
  (olena/oln/arith/logic.hh (oln/b/24_logic.hh 1.6.1.4 640))
  (olena/oln/arith/ops.hh (oln/b/23_ops.hh 1.5.1.2.1.10 640))
  (olena/oln/basics1d.hh (oln/d/41_basics1d.h 1.5 640))
  (olena/oln/basics2d.hh (oln/b/7_basics2d.h 1.6 640))
  (olena/oln/basics3d.hh (oln/28_basics3d.h 1.4 640))
  (olena/oln/basics.hh (oln/d/42_basics.hh 1.14 640))


  (olena/oln/config/system.hh (oln/7_system.hh 1.17 640))
  (olena/oln/convert/basics.hh (oln/23_basics.hh 1.7 640))
  (olena/oln/convert/bound.hh (oln/22_bound.hh 1.12 640))
  (olena/oln/convert/abstract/colorconv.hh (oln/18_colorconv. 1.11 640))
  (olena/oln/convert/conversion.hh (oln/21_conversion 1.18 640))
  (olena/oln/convert/conversion_ng_se.hh (oln/e/24_conversion 1.12 640))
  (olena/oln/convert/force.hh (oln/20_force.hh 1.13 640))
  
  
  
  (olena/oln/convert/nrgbxyz.hh (oln/16_nrgbxyz.hh 1.15 640))
  
  
  (olena/oln/convert/rgbnrgb.hh (oln/17_rgbnrgb.hh 1.14 640))
  (olena/oln/convert/rgbxyz.hh (oln/19_rgbxyz.hh 1.15 640))
  (olena/oln/convert/stretch.hh (oln/f/51_stretch.hh 1.18 640))
  (olena/oln/convol/slow_convolution.hh (oln/f/39_convolutio 1.4.1.4.1.6.1.5 640))
  (olena/oln/convol/fast_gaussian_coefficient.hh (oln/24_fast_gauss 1.5.1.7 640))
  (olena/oln/convol/fast_gaussian.hh (oln/26_fast_gauss 1.6.1.6.1.9 640))
  (olena/oln/convol/fast_gaussian.hxx (oln/25_fast_gauss 1.7.1.8.1.12 640))
  (olena/oln/core/accum.hh (oln/d/40_accum.hh 1.5 640))
  (olena/oln/core/apply.hh (oln/d/39_apply.hh 1.17 640))
  (olena/oln/core/bkd_iter1d.hh (oln/d/38_bkd_iter1d 1.20 640))
  (olena/oln/core/bkd_iter2d.hh (oln/d/37_bkd_iter2d 1.20 640))
  (olena/oln/core/bkd_iter3d.hh (oln/d/36_bkd_iter3d 1.20 640))
  
  
  
  
  (olena/oln/core/box.hh (oln/o/51_box.hh 1.3.1.3 640))
  (olena/oln/core/box.hxx (oln/p/0_box.hxx 1.4.1.1.1.5 640))
  (olena/oln/core/compose.hh (oln/c/22_compose.hh 1.7 640))
  (metalic/mlc/contract.hh (oln/d/31_contract.h 1.10 640))
  (olena/oln/core/coord.hh (oln/d/29_coord.hh 1.4 640))
  (olena/oln/core/dpoint1d.hh (oln/d/27_dpoint1d.h 1.14.2.2 640))
  
  (olena/oln/core/dpoint2d.hh (oln/d/25_dpoint2d.h 1.13.2.1 640))
  
  (olena/oln/core/dpoint3d.hh (oln/d/23_dpoint3d.h 1.13.2.1 640))
  
  (olena/oln/core/abstract/dpoint.hh (oln/d/28_dpoint.hh 1.20.2.2 640))
  
  (olena/oln/core/fold.hh (oln/c/7_fold.hh 1.14 640))
  (olena/oln/core/fwd_iter1d.hh (oln/d/21_fwd_iter1d 1.17 640))
  (olena/oln/core/fwd_iter2d.hh (oln/d/20_fwd_iter2d 1.17 640))
  (olena/oln/core/fwd_iter3d.hh (oln/d/19_fwd_iter3d 1.17 640))
  (olena/oln/core/generate.hh (oln/f/12_generate.h 1.18 640))
  (olena/oln/core/image1d.hh (oln/c/47_image1d.hh 1.28.1.4 640))
  (olena/oln/core/image1d_size.hh (oln/c/46_image1d_si 1.12 600))
  (olena/oln/core/image2d.hh (oln/c/45_image2d.hh 1.30.1.4 640))
  (olena/oln/core/image2d_size.hh (oln/c/44_image2d_si 1.12 600))
  (olena/oln/core/image3d.hh (oln/c/43_image3d.hh 1.27.1.4 640))
  (olena/oln/core/image3d_size.hh (oln/c/42_image3d_si 1.12 640))
  (olena/oln/core/image.hh (oln/d/18_image.hh 1.20.2.2 640))
  
  (olena/oln/core/abstract/image_size.hh (oln/c/41_image_size 1.12 640))
  (olena/oln/core/internal/fake.hh (oln/d/17_fake.hh 1.3 640))
  
  
  
  
  
  
  (olena/oln/core/abstract/iter1d.hh (oln/d/10_iter1d.hh 1.21 640))
  (olena/oln/core/abstract/iter2d.hh (oln/d/9_iter2d.hh 1.21 640))
  (olena/oln/core/abstract/iter3d.hh (oln/d/8_iter3d.hh 1.21 640))
  

  
  
  
  
  
  
  (olena/oln/core/abstract/iter.hh (oln/c/40_iter.hh 1.23 640))
  (olena/oln/core/macros.hh (oln/c/39_macros.hh 1.5.2.2 640))
  (olena/oln/core/neighborhood1d.hh (oln/c/37_neighborho 1.22 640))
  (olena/oln/core/neighborhood2d.hh (oln/c/36_neighborho 1.24 640))
  (olena/oln/core/neighborhood3d.hh (oln/c/35_neighborho 1.22 640))
  (olena/oln/core/abstract/neighborhood.hh (oln/c/38_neighborho 1.25 640))
  (metalic/mlc/objs.hh (oln/c/34_objs.hh 1.7 640))
  (olena/oln/core/point1d.hh (oln/c/32_point1d.hh 1.15.2.1 640))
  
  (olena/oln/core/point2d.hh (oln/c/30_point2d.hh 1.15.2.1 640))
  
  (olena/oln/core/point3d.hh (oln/c/28_point3d.hh 1.17.2.1 640))
  
  (olena/oln/core/abstract/point.hh (oln/c/33_point.hh 1.16.2.2 640))
  
  (olena/oln/core/abstract/binary_image.hh (oln/c/24_pred_image 1.6 640))
  
  (olena/oln/core/abstract/struct_elt.hh (oln/c/25_structelt. 1.26 640))
  (olena/oln/core/traverse.hh (oln/d/30_traverse.h 1.12 640))
  (metalic/mlc/typeadj.hh (oln/e/25_typeadj.hh 1.6 640))
  (metalic/mlc/type.hh (oln/c/21_type.hh 1.32 640))
  (olena/oln/core/window1d.hh (oln/c/15_window1d.h 1.19 640))
  (olena/oln/core/window2d.hh (oln/c/14_window2d.h 1.22 640))
  (olena/oln/core/window3d.hh (oln/c/13_window3d.h 1.20 640))
  (olena/oln/core/abstract/window.hh (oln/c/16_window.hh 1.21 640))
  (olena/oln/core/winiter.hh (oln/c/12_winiter.hh 1.12 640))
  (olena/oln/core/winneighb.hh (oln/c/11_winneighb. 1.14 640))
  (olena/oln/core/w_window1d.hh (oln/c/19_w_window1d 1.20 640))
  (olena/oln/core/w_window2d.hh (oln/c/18_w_window2d 1.6.1.16 640))
  (olena/oln/core/w_window3d.hh (oln/c/17_w_window3d 1.20 640))
  (olena/oln/core/abstract/w_window.hh (oln/c/20_w_window.h 1.18 640))
  (olena/oln/io/base.hh (oln/b/20_base.hh 1.10 640))
  
  (olena/oln/io/basics.hh (oln/b/12_basics.hh 1.6 640))
  (olena/oln/io/file.hh (oln/b/17_file.hh 1.6 640))
  (olena/oln/io/gz.hh (oln/f/16_gz.hh 1.7 640))
  (olena/oln/io/gz_stream.hh (oln/f/17_gz_stream. 1.11 640))
  
  
  (olena/oln/io/pnm_read_3d.hh (oln/b/11_pnm_read3d 1.14 640))
  
  (olena/oln/io/pnm_read.hh (oln/b/16_pnm_read.h 1.9.1.11 640))
  (olena/oln/io/pnm_write_3d.hh (oln/b/9_pnm_write3 1.1.1.14 640))
  
  (olena/oln/io/pnm_write.hh (oln/b/15_pnm_write. 1.8.1.14 640))
  (olena/oln/io/readable.hh (oln/b/13_readable.h 1.13 640))
  (olena/oln/io/se.hh (oln/i/45_se.hh 1.4 640))
  (olena/oln/io/se_neighborhood.hh (oln/i/47_se_neighbo 1.14 640))
  (olena/oln/io/se_window.hh (oln/i/46_se_window. 1.16 640))
  (olena/oln/level/cc.hh (oln/e/20_cc.hh 1.11.1.17 640))
  (olena/oln/level/compare.hh (oln/31_compare.hh 1.9 640))
  (olena/oln/level/connected.hh (oln/30_connected. 1.9.1.14 640))
  (olena/oln/level/fill.hh (oln/32_fill.hh 1.10 640))
  (olena/oln/level/invert.hh (oln/33_invert.hh 1.5.2.2.1.12 640))
  (olena/oln/level/lut.hh (oln/29_lut.hh 1.10 640))
  (olena/oln/level/set_level.hh (oln/p/1_set_level. 1.11 640))
  (olena/oln/level/threshold.hh (oln/f/15_threshold. 1.15 640))
  (config/oln.m4 (oln/j/15_oln.m4 1.38.1.10 640))

  (olena/oln/math/macros.hh (oln/b/21_macros.hh 1.6.1.15 640))
  (metalic/mlc/array/1d.hh (oln/f/23_array1d.hh 1.12 640))
  (metalic/mlc/array/1d.hxx (oln/f/22_array1d.hx 1.10 640))
  (metalic/mlc/array/2d.hh (oln/f/21_array2d.hh 1.12 640))
  (metalic/mlc/array/2d.hxx (oln/f/20_array2d.hx 1.9 640))
  (metalic/mlc/array/3d.hh (oln/f/19_array3d.hh 1.13 640))
  (metalic/mlc/array/3d.hxx (oln/f/18_array3d.hx 1.10 640))
  (metalic/mlc/array/all.hh (oln/f/36_array.hh 1.7 640))
  (metalic/mlc/array/nd.hh (oln/f/35_arraynd.hh 1.4 640))
  (metalic/mlc/bool.hh (oln/c/4_basics.hh 1.15 640))
  (metalic/mlc/cmp.hh (oln/c/3_cmp.hh 1.9 640))
  (metalic/mlc/loop.hh (oln/c/2_control.hh 1.7 640))

  (metalic/mlc/optional.hh (oln/o/41_optional.h 1.8 640))
  (metalic/mlc/is_a.hh (oln/g/33_type.hh 1.13 640))

  (metalic/mlc/math.hh (oln/b/51_ufuncs.hh 1.10 640))
  (olena/oln/morpho/closing.hh (oln/b/6_closing.hh 1.6 640))
  (olena/oln/morpho/closing.inc (oln/44_closing.in 1.18 640))
  (olena/oln/morpho/dilation.hh (oln/b/5_dilation.h 1.20 640))
  (olena/oln/morpho/erosion.hh (oln/b/4_erosion.hh 1.22 640))
  (olena/oln/morpho/extrema.hh (oln/38_extrema.hh 1.14 640))
  (olena/oln/morpho/extrema.hxx (oln/j/4_extrema.hx 1.18 640))
  (olena/oln/morpho/extrema_killer.hh (oln/e/19_extrema_ki 1.7.1.4.1.15 640))
  (olena/oln/morpho/fast_morpho.hh (oln/46_fast_morph 1.9 640))
  (olena/oln/morpho/fast_morpho.hxx (oln/45_fast_morph 1.22 640))
  (olena/oln/morpho/geodesic_dilation.hh (oln/37_geodesic_d 1.11.1.13 640))
  (olena/oln/morpho/geodesic_erosion.hh (oln/36_geodesic_e 1.20 640))
  (olena/oln/morpho/gradient.hh (oln/b/3_gradient.h 1.6 640))
  (olena/oln/morpho/gradient.inc (oln/43_gradient.i 1.17 640))
  (olena/oln/morpho/hit_or_miss.hh (oln/b/2_hit_or_mis 1.7 640))
  (olena/oln/morpho/hit_or_miss.inc (oln/42_hit_or_mis 1.23 640))
  (olena/oln/morpho/laplacian.hh (oln/b/1_laplacian. 1.6 640))
  (olena/oln/morpho/laplacian.inc (oln/41_laplacian. 1.17 640))
  (olena/oln/morpho/minmax.hh (oln/b/0_minmax.hh 1.6 640))
  (olena/oln/morpho/opening.hh (oln/51_opening.hh 1.6 640))
  (olena/oln/morpho/opening.inc (oln/40_opening.in 1.16 640))
  (olena/oln/morpho/reconstruction.hh (oln/35_reconstruc 1.13.1.14 640))
  (olena/oln/morpho/splitse.hh (oln/34_splitse.hh 1.8 640))
  (olena/oln/morpho/stat.hh (oln/50_stat.hh 1.8.1.12 640))
  (olena/oln/morpho/thickening.hh (oln/e/29_thickening 1.7 640))
  (olena/oln/morpho/thickening.inc (oln/e/28_thickening 1.12 640))
  (olena/oln/morpho/thinning.hh (oln/e/27_thinning.h 1.7 640))
  (olena/oln/morpho/thinning.inc (oln/e/26_thinning.i 1.13 640))
  (olena/oln/morpho/top_hat.hh (oln/49_top_hat.hh 1.4 640))
  (olena/oln/morpho/top_hat.inc (oln/39_top_hat.in 1.17 640))
  (olena/oln/morpho/watershed.hh (oln/48_watershed. 1.16 640))
  (olena/oln/morpho/watershed.hxx (oln/47_watershed. 1.9.1.5.1.7 640))
  (olena/oln/topo/dmap.hh (oln/p/2_dmap.hh 1.11 640))
  (olena/oln/topo/dmap.hxx (oln/p/3_dmap.hxx 1.7.1.11 640))
  (olena/oln/transforms/dwt.hh (oln/i/35_dwt.hh 1.2.1.4.1.14 640))
  (olena/oln/transforms/fft.hh (oln/i/36_fft.hh 1.4.1.11 640))
  (olena/oln/transforms/wavelet_coeffs.hh (oln/i/34_wavelet_co 1.8 640))
  (integre/ntg/all.hh (oln/g/32_all.hh 1.10.1.8 640))
  (integre/ntg/real/behavior.hh (oln/g/31_behaviour. 1.13.1.15.1.2 640))

  (integre/ntg/utils/cast.hh (oln/i/26_cast.hh 1.3.1.14 640))
  (integre/ntg/vect/cplx_representation.hh (oln/i/3_cplx_repre 1.5 640))
  (integre/ntg/utils/debug.hh (oln/i/8_debug.hh 1.2.1.8 640))
  (integre/ntg/core/internal/global_ops_defs.hh (oln/g/26_global_ops 1.17 640))
  (integre/ntg/core/internal/global_ops.hh (oln/g/27_global_ops 1.11.1.15 640))
  (integre/ntg/core/internal/global_ops_traits.hh (oln/g/25_global_ops 1.7.1.10 640))
  (integre/ntg/color/hsi.hh (oln/i/20_hsi.hh 1.3.1.7 640))
  (integre/ntg/color/hsl.hh (oln/i/21_hsl.hh 1.3.1.4 640))
  (integre/ntg/color/hsv.hh (oln/i/22_hsv.hh 1.3.1.5 640))
  (integre/ntg/core/interval.hh (oln/g/22_interval.h 1.6.1.8 640))
  (integre/ntg/real/int_s.hh (oln/g/24_int_s.hh 1.16.1.16.1.2 640))
  (integre/ntg/real/int_u.hh (oln/g/23_int_u.hh 1.19.1.16.1.2 640))
  (integre/ntg/color/nrgb.hh (oln/i/19_nrgb.hh 1.5.1.6 640))





  (integre/ntg/real/optraits_builtin_int.hh (oln/g/18_optraits_b 1.6.1.8.1.2 640))






  (integre/ntg/real/optraits_real_defs.hh (oln/g/11_optraits_s 1.14.1.2 640))
  (integre/ntg/real/optraits_real.hh (oln/g/12_optraits_s 1.11.1.8.1.1 640))

  (integre/ntg/core/predecls.hh (oln/g/10_predecls.h 1.10.1.3.1.2 640))
  (integre/ntg/core/value.hh (oln/g/8_rec_value. 1.8.1.8.1.1 640))
  (integre/ntg/color/rgb.hh (oln/i/18_rgb.hh 1.3.1.4 640))

  (integre/ntg/core/type.hh (oln/g/6_type.hh 1.10 640))



  (integre/ntg/real/typetraits_builtin_int.hh (oln/g/3_typetraits 1.7.1.11.1.2 640))

  (integre/ntg/color/xyz.hh (oln/i/24_xyz.hh 1.3.1.7 640))
  (integre/ntg/color/yiq.hh (oln/i/23_yiq.hh 1.3.1.7 640))
  (integre/ntg/color/yuv.hh (oln/i/25_yuv.hh 1.3.1.7 640))
  (olena/oln/utils/copy.hh (oln/i/29_copy.hh 1.9 640))
  (olena/oln/utils/histogram.hh (oln/10_histogram. 1.6.1.14.1.16 640))
  (olena/oln/utils/stat.hh (oln/9_stat.hh 1.5.1.10 640))
  (olena/oln/utils/timer.hh (oln/8_timer.hh 1.10 640))
  (olena/tests/arith/Makefile.am (oln/o/43_Makefile.a 1.5.1.1 640))
  
  (olena/tests/arith/tests/min1 (oln/o/44_min1 1.1.1.9 640))
  (metalic/tests/check/check.hh (oln/e/40_check.hh 1.4 640))
  (olena/tests/check/data.cc (oln/f/5_data.cc 1.9 640))
  (olena/tests/check/data.hh (oln/f/6_data.hh 1.4 640))
  (metalic/tests/check/main.cc (oln/e/43_main.cc 1.1 640))
  (metalic/tests/check/Makefile.am (oln/e/44_Makefile.a 1.10 640))
  (metalic/tests/check/Makefile.check (oln/e/37_Makefile.c 1.8 640))
  (metalic/tests/check/Makefile.flags (oln/e/36_Makefile.f 1.12.1.3 640))
  (metalic/tests/check/srcdir.cc (oln/e/38_srcdir.cc 1.7 640))
  (metalic/tests/check/srcdir.hh (oln/e/35_srcdir.hh 1.6 640))
  (metalic/tests/check/verbose.cc (oln/e/41_verbose.cc 1.3 640))
  (metalic/tests/check/verbose.hh (oln/e/42_verbose.hh 1.3 640))

  (olena/tests/convert/convcomp.cc (oln/f/3_convcomp.c 1.9 640))
  (olena/tests/convert/convcomp.hh (oln/f/1_convcomp.h 1.10 640))
  (olena/tests/convert/Makefile.am (oln/f/0_Makefile.a 1.14 640))

  (olena/tests/convol/Makefile.am (oln/f/38_Makefile.a 1.14 640))
  (olena/tests/convol/tests/slow_sum_2d_1 (oln/f/41_slow_sum_2 1.2.1.7 640))
  (olena/tests/convol/tests/slow_sum_2d_2 (oln/f/40_slow_sum_2 1.2.1.6 640))
  (olena/tests/convol/tests/sobel_gradient (oln/f/45_sobel_grad 1.3.1.8 640))
  (olena/tests/convol/sum_on_random.pgm (oln/f/42_sum_on_ran 1.1 640) :no-keywords)

  (olena/tests/io/tests/2d (oln/e/47_2d.cc 1.7.1.8 640))
  (olena/tests/io/loadsave.hh (oln/e/48_loadsave.h 1.7.1.10 640))
  (olena/tests/io/Makefile.am (oln/e/49_Makefile.a 1.24 640))
  (olena/tests/io/tests/pretty (oln/i/42_pretty.cc 1.3 640))
  (olena/tests/io/tests/se_fail (oln/i/43_se_fail.cc 1.4 640))
  (olena/tests/io/tests/se_pass (oln/i/44_se_pass.cc 1.3 640))
  (olena/tests/Makefile.am (oln/e/45_Makefile.a 1.20 640))

  (metalic/tests/array/gen_test.cc (oln/f/34_gen_test.c 1.11.1.4 640))
  (metalic/tests/array/gen_test_utils/errors.cc (oln/f/33_errors.cc 1.1 640))
  (metalic/tests/array/gen_test_utils/errors.hh (oln/f/32_errors.hh 1.1 640))
  (metalic/tests/array/gen_test_utils/postlude (oln/f/31_postlude 1.1 640))
  (metalic/tests/array/gen_test_utils/prelude (oln/f/30_prelude 1.5 640))
  (metalic/tests/array/Makefile.am (oln/f/27_Makefile.a 1.6.1.2 640))
  (metalic/tests/array/test_array1d.cc (oln/f/26_test_array 1.5 640))
  (metalic/tests/array/test_array2d.cc (oln/f/25_test_array 1.5 640))
  (metalic/tests/array/test_array3d.cc (oln/f/24_test_array 1.5 640))
  (olena/tests/morpho/tests/edoc (oln/f/13_edoc.cc 1.4.1.7 640))
  (olena/tests/morpho/tests/extrkiller (oln/e/31_extrkiller 1.5.1.8 640))
  (olena/tests/morpho/Makefile.am (oln/e/32_Makefile.a 1.13 640))
  (olena/tests/morpho/tests/reconstruction (oln/e/34_reconstruc 1.13 640))
  (olena/tests/README (oln/f/4_README 1.6 640))
  (olena/tests/sanity/includes.test (oln/f/46_includes.t 1.8 750))
  (olena/tests/sanity/Makefile.am (oln/f/48_Makefile.a 1.4.1.3 640))
  (olena/tests/transforms/tests/dwt (oln/i/38_dwt.cc 1.8.1.6 640))
  (olena/tests/transforms/tests/fft (oln/i/37_fft.cc 1.6.1.5 640))
  (olena/tests/transforms/Makefile.am (oln/i/40_Makefile.a 1.12 640))
;;  (oln/tests/transforms/output () :directory)
  (integre/tests/types/Makefile.am (oln/h/5_Makefile.a 1.11 640))
  (integre/tests/types/runtests (oln/h/3_runtests 1.14.1.7 750))
  (integre/tests/types/tests/bin1 (oln/i/28_bin1 1.2 640))
  (integre/tests/types/tests/bin2 (oln/o/42_bin2 1.3 640))
  (integre/tests/types/tests/bin3 (oln/o/46_bin3 1.2 640))
  (integre/tests/types/tests/comp1 (oln/h/9_comp1 1.2 640))
  (integre/tests/types/tests/comp2 (oln/h/8_comp2 1.2 640))
  (integre/tests/types/tests/comp3 (oln/h/7_comp3 1.2 640))
  (integre/tests/types/tests/conv1 (oln/g/49_conv1 1.4 640))
  (integre/tests/types/tests/conv2 (oln/g/42_conv2 1.4 640))
  (integre/tests/types/tests/cplx1 (oln/i/2_cplx1 1.3 640))
  (integre/tests/types/tests/cplx2 (oln/i/1_cplx2 1.3 640))
  (integre/tests/types/tests/cplx3 (oln/i/0_cplx3 1.3 640))
  (integre/tests/types/tests/cplx4 (oln/h/51_cplx4 1.3 640))
  (integre/tests/types/tests/cplx5 (oln/i/7_cplx5 1.2 640))
  (integre/tests/types/tests/cplx6 (oln/i/6_cplx6 1.5 640))
  (integre/tests/types/tests/float1 (oln/h/12_float1 1.3 640))
  (integre/tests/types/tests/float2 (oln/h/40_float2 1.3 640))
  (integre/tests/types/tests/float_c1 (oln/h/13_float_c1 1.3 640))
  (integre/tests/types/tests/float_r1 (oln/h/10_float_r1 1.4 640))
  (integre/tests/types/tests/float_r2 (oln/h/11_float_r2 1.3 640))
  (integre/tests/types/tests/int1b (oln/g/48_int1b 1.2 640))
  (integre/tests/types/tests/int1 (oln/h/1_int1 1.2 640))
  (integre/tests/types/tests/int2 (oln/h/0_int2 1.2 640))
  (integre/tests/types/tests/int3 (oln/g/51_int3 1.2 640))
  (integre/tests/types/tests/int4b (oln/h/35_int4b 1.2 640))
  (integre/tests/types/tests/int4 (oln/g/50_int4 1.2 640))
  (integre/tests/types/tests/int5 (oln/g/47_int5 1.2 640))
  (integre/tests/types/tests/int6b (oln/g/45_int6b 1.2 640))
  (integre/tests/types/tests/int6c (oln/g/44_int6c 1.2 640))
  (integre/tests/types/tests/int6d (oln/g/43_int6d 1.2 640))
  (integre/tests/types/tests/int6 (oln/g/46_int6 1.2 640))
  (integre/tests/types/tests/int7 (oln/h/14_int7 1.2 640))
  (integre/tests/types/tests/int_s1 (oln/g/40_int_s1 1.2 640))
  (integre/tests/types/tests/int_s2b (oln/g/38_int_s2b 1.2 640))
  (integre/tests/types/tests/int_s2 (oln/g/39_int_s2 1.2 640))
  (integre/tests/types/tests/int_sc1 (oln/g/37_int_sc1 1.3 640))
  (integre/tests/types/tests/int_sc2 (oln/g/36_int_sc2 1.2 640))
  (integre/tests/types/tests/int_sc3 (oln/g/35_int_sc3 1.2 640))
  (integre/tests/types/tests/int_sc4 (oln/h/39_int_sc4 1.3 640))
  (integre/tests/types/tests/int_u1 (oln/h/22_int_u1 1.2 640))
  (integre/tests/types/tests/int_u2a (oln/h/17_int_u2a 1.2 640))
  (integre/tests/types/tests/int_u2b (oln/h/20_int_u2b 1.2 640))
  (integre/tests/types/tests/int_u2c (oln/h/21_int_u2c 1.2 640))
  (integre/tests/types/tests/int_u2d (oln/h/16_int_u2d 1.2 640))
  (integre/tests/types/tests/int_u2e (oln/h/38_int_u2e 1.2 640))
  (integre/tests/types/tests/int_u2f (oln/h/41_int_u2f 1.2 640))
  (integre/tests/types/tests/int_u3a (oln/h/18_int_u3a 1.2 640))
  (integre/tests/types/tests/int_u3b (oln/h/23_int_u3b 1.2 640))
  (integre/tests/types/tests/int_u4 (oln/h/19_int_u4 1.2 640))
  (integre/tests/types/tests/int_u6 (oln/h/37_int_u6 1.3 640))
  (integre/tests/types/tests/op1 (oln/h/15_op1 1.3 640))
  (integre/tests/types/tests/op2 (oln/h/6_op2 1.3 640))
  (integre/tests/types/tests/optrait1a (oln/h/25_optrait1a 1.4 640))
  (integre/tests/types/tests/optrait1b (oln/h/26_optrait1b 1.4 640))
  (integre/tests/types/tests/optrait2a (oln/h/28_optrait2a 1.5 640))
  (integre/tests/types/tests/optrait2b (oln/h/27_optrait2b 1.4 640))
  (integre/tests/types/tests/optrait3 (oln/h/24_optrait3 1.7 640))
  (integre/tests/types/tests/range1 (oln/h/34_range1 1.3 640))
  (integre/tests/types/tests/range2b (oln/h/36_range2b 1.2 640))
  (integre/tests/types/tests/range2 (oln/h/33_range2 1.2 640))
  (integre/tests/types/tests/range3b (oln/h/32_range3b 1.2 640))
  (integre/tests/types/tests/range3c (oln/h/30_range3c 1.2 640))
  (integre/tests/types/tests/range3d (oln/h/29_range3d 1.2 640))
  (integre/tests/types/tests/range3 (oln/h/31_range3 1.2 640))
  (integre/tests/types/tests/sizes (oln/i/15_sizes 1.2 640))
  (integre/tests/types/tests/unsafe1 (oln/h/2_unsafe1 1.2 640))
  (integre/tests/types/tests/unsafe2 (oln/g/41_unsafe2 1.2 640))
  (integre/tests/types/tests/vec1 (oln/h/49_vec1 1.2 640))
  (integre/tests/types/tests/vec2 (oln/h/48_vec2 1.2 640))
  (integre/tests/types/tests/vec3 (oln/h/47_vec3 1.2 640))
  (integre/tests/types/tests/vec4 (oln/h/46_vec4 1.2 640))
  (integre/tests/types/tests/vec5 (oln/h/45_vec5 1.3 640))
  (integre/tests/types/tests/vec6 (oln/h/44_vec6 1.2 640))
  (integre/tests/types/tests/vec7 (oln/h/50_vec7 1.2 640))

  (prj (oln.prj) :symlink)



  (tools () :directory)
  (tools/Makefile.am (oln/o/37_Makefile.a 1.7 640))
  (tools/swilena/configure.ac (oln/o/26_configure. 1.2 640))
  (tools/swilena/doc/Makefile.am (oln/n/39_Makefile.a 1.3 640))
  (tools/swilena/doc/swilena.texi (oln/n/40_swilena.te 1.1.1.5 600))
  
  ; (tools/swilena/java/Makefile.in ())
  (tools/swilena/Makefile.am (oln/o/25_Makefile.a 1.5 640))
;  (tools/swilena/python/Makefile.am (oln/n/44_Makefile.a 1.4 640))
;  (tools/swilena/python/typedefs.hh (oln/n/43_typedefs.h 1.3 640))
  (tools/swilena/README (oln/n/35_README 1.1 640))
  (tools/swilena/src () :directory)
;  (tools/swilena/src/lena128.pgm (oln/o/19_lena128.pg 1.1 640) :no-keywords)
;  (tools/swilena/src/lena2.pgm (oln/o/14_lena2.pgm 1.1 640) :no-keywords)
;  (tools/swilena/src/lena3.pgm (oln/o/5_lena3.pgm 1.1 640) :no-keywords)
;  (tools/swilena/src/lena3.pnm (oln/o/4_lena3.pnm 1.1 640) :no-keywords)
;  (tools/swilena/src/lena.pgm (oln/o/20_lena.pgm 1.1 640) :no-keywords)
;  (tools/swilena/src/Makefile.am (oln/o/23_Makefile.a 1.1 640))
  (tools/swilena/meta () :directory)
  (tools/swilena/meta/attic () :directory)
  (tools/swilena/meta/attic/swilena1d_convert.i (oln/n/48_swilena1d_ 1.1 640))
  (tools/swilena/meta/attic/swilena1d.i (oln/o/17_swilena1d. 1.1 640))
  (tools/swilena/meta/attic/swilena1d_morpho.i (oln/o/0_swilena1d_ 1.1 640))
  (tools/swilena/meta/attic/swilena2d_convert.i (oln/n/47_swilena2d_ 1.1 640))
  (tools/swilena/meta/attic/swilena2d.i (oln/o/2_swilena2d. 1.1 640))
  (tools/swilena/meta/attic/swilena2d_morpho.i (oln/n/51_swilena2d_ 1.1 640))
  (tools/swilena/meta/attic/swilena3d_convert.i (oln/n/46_swilena3d_ 1.1 640))
  (tools/swilena/meta/attic/swilena3d.i (oln/o/1_swilena3d. 1.1 640))
  (tools/swilena/meta/attic/swilena3d_morpho.i (oln/n/45_swilena3d_ 1.1 640))
  (tools/swilena/meta/attic/swilena_conversions.i (oln/o/15_swilena_co 1.1 640))
  (tools/swilena/meta/attic/swilena_convert_dim.i (oln/n/49_swilena_co 1.2 640))
  (tools/swilena/meta/attic/swilena_convoldefs.i (oln/o/10_swilena_co 1.2 640))
  (tools/swilena/meta/attic/swilena_dim.i (oln/o/22_swilena_di 1.3 640))
  (tools/swilena/meta/attic/swilena_dpoint.i (oln/o/13_swilena_dp 1.1 640))
  (tools/swilena/meta/attic/swilena_exceptions.i (oln/o/21_swilena_ex 1.1 640))
  (tools/swilena/meta/attic/swilena_image.i (oln/o/12_swilena_im 1.1 640))
  (tools/swilena/meta/attic/swilena.i (oln/o/24_swilena.i 1.2 640))
  (tools/swilena/meta/attic/swilena_meta_win.i (oln/o/7_swilena_me 1.1 640))
  (tools/swilena/meta/attic/swilena_morphodefs.i (oln/o/18_swilena_mo 1.2 640))
  (tools/swilena/meta/attic/swilena_morpho_dim.i (oln/n/50_swilena_mo 1.3 640))
  (tools/swilena/meta/attic/swilena_neighborhood.i (oln/o/8_swilena_ne 1.1 640))
  (tools/swilena/meta/attic/swilena_point.i (oln/o/11_swilena_po 1.1 640))
  (tools/swilena/meta/attic/swilena_typedefs.i (oln/o/16_swilena_ty 1.2 640))
  (tools/swilena/meta/attic/swilena_types.i (oln/o/3_swilena_ty 1.4 640))
  (tools/swilena/meta/attic/swilena_window.i (oln/o/9_swilena_wi 1.1 640))
  (tools/swilena/meta/attic/swilena_w_window.i (oln/o/6_swilena_w_ 1.1 640))
;  (tools/swilena/swilena.prj (oln/n/38_swilena.pr 1.1 640))
  (tools/swilena/TODO (oln/n/36_TODO 1.3 640))
  (tools/utilities/configure.ac (oln/o/27_configure. 1.2 640))
  (tools/utilities/Makefile.am (oln/g/2_Makefile.a 1.12.1.5 640))
  (tools/utilities/morpho/generate_morpho.sh (oln/i/30_generate_m 1.3.1.5.1.2 750))
  (tools/utilities/morpho/Makefile.am (oln/i/32_Makefile.a 1.9.1.6 640))
  (tools/utilities/morpho/morpho_template.cc (oln/i/33_morpho_tem 1.5.1.2.1.4 640))
  (tools/utilities/morpho/morpho_template_extrema.cc (oln/j/5_morpho_tem 1.1.1.2.1.3 640))
  (tools/utilities/morpho/morpho_template_gaussian.cc (oln/j/8_morpho_tem 1.1.1.2.1.4 640))
  (tools/utilities/morpho/morpho_template_watershed.cc (oln/j/6_morpho_tem 1.1.1.2.1.3 640))
  (tools/utilities/morpho/morpho_template_with_functor.cc (oln/j/10_morpho_tem 1.1.1.2.1.3 640))
  (tools/utilities/morpho/morpho_template_with_neighb.cc (oln/j/7_morpho_tem 1.1.1.2.1.3 640))
  (tools/utilities/morpho/morpho_template_with_twowin.cc (oln/j/9_morpho_tem 1.1.1.2.1.3 640))
  (tools/utilities/mosaic.cc (oln/g/0_mosaic.cc 1.5.1.5 640))

;; Files added by populate at Sun, 19 Jan 2003 21:48:10 +0100,
;; to version 7.25(w), by raph:

  (doc/demo/morpholena-wshed.cc (oln/p/5_morpholena 1.3 640))
  (doc/demo/morpholena-base.cc (oln/p/6_morpholena 1.4 640))
  (doc/demo/morpholena-grad.cc (oln/p/7_morpholena 1.3 640))
  (doc/demo/morpholena-hats.cc (oln/p/8_morpholena 1.4 640))

  (doc/demo/morpholena-hit-miss.cc (oln/p/10_morpholena 1.3 640))
  (doc/demo/morpholena-ops.cc (oln/p/11_morpholena 1.3 640))
  (doc/demo/morpholena-minima.cc (oln/p/12_morpholena 1.4 640))

  (doc/demo/convol-gaussian.cc (oln/p/14_morpholena 1.7 640))
  (doc/demo/morpholena-wshed-beucher.cc (oln/p/15_morpholena 1.3 640))


;; Files added by populate at Sun, 19 Jan 2003 21:48:32 +0100,
;; to version 7.25(w), by raph:

  (olena/oln/config/pconf-hh.in (oln/p/17_pconf-hh.i 1.2 640))

;; Files deleted by depopulate at Sun, 19 Jan 2003 21:50:24 +0100,
;; from version 7.25(w), by raph:

  ; (oln/oln/config/pconf.hh ())

;; Files deleted by depopulate at Sun, 19 Jan 2003 21:50:40 +0100,
;; from version 7.25(w), by raph:

  ; (oln/oln/config/pconf-inc.in ())

;; Files deleted by depopulate at Sun, 19 Jan 2003 21:56:13 +0100,
;; from version 7.25(w), by raph:

  ; (oln/tests/configure.ac ())

;; Files added by populate at Mon, 20 Jan 2003 11:43:58 +0100,
;; to version 7.27(w), by raph:

  (olena/conf/configure.ac (oln/p/23_configure. 1.5.1.2 640))
  (olena/conf/gen-scripts.sh (oln/p/24_gen-script 1.3.1.1 750))
  (olena/conf/oln-config.shin (oln/p/25_oln-config 1.1.1.2 640))
  (olena/conf/compilers.def (oln/p/26_compilers. 1.3 640))

;; Files added by populate at Tue, 21 Jan 2003 00:25:46 +0100,
;; to version 7.29(w), by raph:

  (tools/lib/Makefile.am (oln/p/27_Makefile.a 1.2 640))

;; Files added by populate at Tue, 21 Jan 2003 00:25:52 +0100,
;; to version 7.29(w), by raph:

  (tools/lib/getopt1.c (oln/p/28_getopt1.c 1.2 640))
  (tools/lib/oln_getopt.h (oln/p/29_getopt.h 1.2 640))
  (tools/lib/getopt.c (oln/p/30_getopt.c 1.2 640))

;; Files added by populate at Tue, 21 Jan 2003 00:33:22 +0100,
;; to version 7.29(w), by raph:

  (tools/lib/gettext.h (oln/p/31_gettext.h 1.1 640))

;; Files added by populate at Tue, 21 Jan 2003 00:57:11 +0100,
;; to version 7.29(w), by raph:

  (tools/lib/getopt.hh (oln/p/32_getopt.hh 1.2 640))

;; Files added by populate at Tue, 21 Jan 2003 09:12:30 +0100,
;; to version 7.29(w), by raph:

  (integre/ntg/config/math.hh (oln/p/33_math.hh 1.6 640))

;; Files deleted by depopulate at Wed, 22 Jan 2003 13:34:58 +0100,
;; from version 7.31(w), by raph:

  ; (component.m4 ())
  ; (oln-version.m4 ())

;; Files added by populate at Wed, 22 Jan 2003 18:36:01 +0100,
;; to version 7.33(w), by raph:

  (metalic/tests/check/compile.hh (oln/p/35_compile.hh 1.1 640))
  (metalic/tests/check/compile.cc (oln/p/36_compile.cc 1.1 640))

;; Files deleted by depopulate at Wed, 22 Jan 2003 18:58:45 +0100,
;; from version 7.33(w), by raph:

  ; (tools/configure.ac ())

;; Files deleted by depopulate at Wed, 22 Jan 2003 18:58:48 +0100,
;; from version 7.33(w), by raph:

  ; (doc/configure.ac ())

;; Files deleted by depopulate at Wed, 22 Jan 2003 18:58:51 +0100,
;; from version 7.33(w), by raph:

  ; (oln/configure.ac ())

;; Files added by populate at Thu, 23 Jan 2003 14:26:31 +0100,
;; to version 7.36(w), by raph:

  (config/oln-local.m4 (oln/p/37_oln-local. 1.7 640))

;; Files deleted by depopulate at Thu, 23 Jan 2003 14:57:33 +0100,
;; from version 7.37(w), by raph:

  ; (doc/demo/morpholena-fast-hats.cc ())

;; Files deleted by depopulate at Thu, 23 Jan 2003 14:57:58 +0100,
;; from version 7.37(w), by raph:

  ; (doc/demo/morpholena-minima-imp.cc ())
  ; (doc/demo/morpholena-opening-closing.cc ())

;; Files added by populate at Thu, 23 Jan 2003 15:43:23 +0100,
;; to version 7.39(w), by raph:

  (doc/dev/Makefile.am (oln/p/38_Makefile.a 1.6.1.4 640))

;; Files deleted by depopulate at Fri, 24 Jan 2003 10:54:23 +0100,
;; from version 7.40(w), by raph:

  ; (THANKS ())

;; Files added by populate at Fri, 24 Jan 2003 11:03:53 +0100,
;; to version 7.40(w), by raph:

  (doc/dev/biblio.texi (oln/p/39_biblio.tex 1.5 640))
  (doc/dev/thanks.texi (oln/p/40_thanks.tex 1.8 640))
  (doc/dev/abstract.texi (oln/p/41_abstract.t 1.7.1.4 640))

;; Files deleted by depopulate at Fri, 24 Jan 2003 11:04:25 +0100,
;; from version 7.40(w), by raph:

  ; (README ())

;; Files added by populate at Fri, 24 Jan 2003 14:34:30 +0100,
;; to version 7.40(w), by raph:

  (doc/dev/build.texi (oln/p/42_build.texi 1.15 640))

;; Files added by populate at Fri, 24 Jan 2003 14:34:47 +0100,
;; to version 7.40(w), by raph:

  (doc/dev/install.texi (oln/p/43_install.te 1.4 640))

  (doc/dev/faq.texi (oln/p/44_faq.texi 1.12 640))

;; Files added by populate at Sat, 25 Jan 2003 19:02:34 +0100,
;; to version 7.45(w), by raph:

  (doc/dev/srctree.texi (oln/p/45_srctree.te 1.8 640))
  (doc/dev/conf.texi (oln/q/2_conf.texi 1.5 640))

;; Files added by populate at Sat, 08 Feb 2003 13:38:09 +0100,
;; to version 7.48(w), by raph:

  (doc/ref/gen_filelists.sh (oln/q/4_gen_fileli 1.1 640))

;; Files added by populate at Mon, 10 Feb 2003 09:36:58 +0100,
;; to version 7.52(w), by raph:

  (doc/dev/design.texi (oln/q/5_design.tex 1.3 640))


;; Files added by populate at Tue, 04 Mar 2003 19:30:28 +0100,
;; to version 8.9(w), by jerome:

  (olena/oln/morpho/attribute_closing_opening.hh (oln/q/49_attribute_ 1.26 640))
  (olena/oln/morpho/attribute_union_find.hh (oln/q/50_attribute_ 1.20 640))

  (olena/tests/convol () :directory)
  (metalic/config (../config) :symlink)
  (metalic/m4 () :directory)
  (metalic/doc () :directory)
  (metalic/tests () :directory)
  (metalic/mlc () :directory)
  (metalic/lib (../lib) :symlink)
  (olena/lib (../lib) :symlink)
  (metalic/tests/Makefile.am (oln/q/31_Makefile.a 1.4 640))
  (metalic/Makefile.am (oln/q/32_Makefile.a 1.3 640))
  (metalic/mlc/Makefile.am (oln/q/33_Makefile.a 1.7.1.1 640))
  (integre () :directory)
  (integre/ntg () :directory)
  (integre/Makefile.am (oln/q/34_Makefile.a 1.3 640))
  (integre/ntg/Makefile.am (oln/q/36_Makefile.a 1.8.1.2.1.1 640))
  (olena/tests/check/defs.in (oln/q/37_defs.in 1.1 640))
  (olena/tests/check/Makefile.am (oln/q/38_Makefile.a 1.4 640))
  (olena/tests/check/Makefile.flags (oln/q/39_Makefile.f 1.4.1.2 640))
  (olena/tests/check/Makefile.check (oln/q/40_Makefile.c 1.5 640))
  (integre/tests/Makefile.am (oln/q/41_Makefile.a 1.4 640))
  (integre/tests/check/defs.in (oln/q/42_defs.in 1.1 640))
  (metalic/mlc/array/objs.hh (oln/q/45_objs.hh 1.3 640))
  (metalic/mlc/config/system.hh (oln/q/46_system.hh 1.2 640))
  (olena/oln/Makefile.am (oln/q/47_Makefile.a 1.3.1.1.1.6.1.7.1.7.1.1 640))
  (integre/ntg/config/system.hh (oln/q/48_system.hh 1.2 640))
  (metalic/tests/main/tests/is_a1 (oln/r/17_is_a1 1.4 640))
  (metalic/tests/main/tests/ensure3 (oln/r/18_ensure3 1.4 640))
  (metalic/tests/main/tests/ensure2 (oln/r/19_ensure2 1.4 640))
  (metalic/tests/main/tests/pow2sup2 (oln/r/20_pow2sup2 1.3 640))
  (metalic/tests/main/tests/ensure1 (oln/r/21_ensure1 1.3 640))
  (metalic/tests/main/tests/pow2sup1 (oln/r/22_pow2sup1 1.3 640))
  (metalic/tests/main/Makefile.am (oln/r/23_Makefile.a 1.2 640))
  
  (metalic/tests/check/defs.in (oln/r/25_defs.in 1.1 640))
;; Files added by populate at Wed, 19 Mar 2003 13:39:57 +0100,
;; to version 8.21(w), by sylvain:

  (olena/tests/topo/Makefile.am (oln/r/26_Makefile.a 1.3.1.3 640))
  (olena/tests/topo/tests/inter-pixel (oln/r/27_test-inter 1.7 640))
  (olena/tests/topo/tests/cmap (oln/r/28_test-cmap. 1.10 640))
  
  
  
  
  (olena/oln/topo/tarjan/union.hh (oln/r/33_union.hh 1.12 640))
  (olena/oln/topo/inter-pixel/inter-pixel.hh (oln/r/34_inter-pixe 1.16 640))
  (olena/oln/topo/tarjan/flat-zone.hh (oln/r/35_flat-zone. 1.15 640))
  (olena/oln/topo/combinatorial-map/cmap.hh (oln/r/36_cmap.hh 1.14 640))

;; Files added by populate at Thu, 20 Mar 2003 18:06:35 +0100,
;; to version 8.22(w), by sylvain:

  
  
  
  (olena/img/test-cmap.pgm (oln/r/40_test-cmap. 1.1 640) :no-keywords)

;; Files added by populate at Mon, 31 Mar 2003 15:17:00 +0200,
;; to version 8.26(w), by sylvain:

  (olena/oln/topo/combinatorial-map/internal/zeta.hh (oln/r/43_zeta.hh 1.4 640))
  (olena/oln/topo/inter-pixel/fwd-dir-iter.hh (oln/r/44_fwd-dir-it 1.6 640))
  (olena/oln/topo/inter-pixel/bkd-dir-iter.hh (oln/r/45_bkd-dir-it 1.6 640))
  (olena/oln/topo/inter-pixel/node.hh (oln/r/46_node.hh 1.7 640))
  (olena/oln/topo/inter-pixel/internal/dir-iter.hh (oln/r/47_dir-iter.h 1.6 640))
  (olena/oln/topo/inter-pixel/internal/dir.hh (oln/r/48_dir.hh 1.5 640))
  

;; Files added by populate at Wed, 09 Apr 2003 22:18:27 +0200,
;; to version 8.31(w), by nes:

  (doc/dev/upgrading.texi (oln/r/50_upgrading. 1.4 640))


  (integre/tests/types/tests/builtin1 (oln/s/7_builtin1 1.2 640))
  (olena/tests/core/tests/w_window (oln/s/8_w_window 1.2 640))
  
  (olena/tests/core/Makefile.am (oln/s/10_Makefile.a 1.7.1.2 640))
  (integre/tests/types/tests/int_u5c (oln/s/11_int_u5c 1.2 640))
;; Files added by populate at Tue, 06 May 2003 06:05:19 +0200,
;; to version 8.33(w), by raph:

  (tools/swilena/expand.sh (oln/s/25_expand.sh 1.17 750))

;; Files added by populate at Tue, 06 May 2003 06:05:41 +0200,
;; to version 8.33(w), by raph:

  (tools/swilena/meta/Makefile.am (oln/s/26_Makefile.a 1.4 640))

;; Files added by populate at Tue, 06 May 2003 06:05:43 +0200,
;; to version 8.33(w), by raph:

  (tools/swilena/meta/swilena_w_win.i (oln/s/27_swilena_w_ 1.2 640))
  (tools/swilena/meta/swilena_structelt.i (oln/s/28_swilena_st 1.4 640))
  (tools/swilena/meta/swilena_point.i (oln/s/29_swilena_po 1.3 640))
  
  
  
  (tools/swilena/meta/swilena_ntg.i (oln/s/33_swilena_nt 1.9 640))
  (tools/swilena/meta/swilena_morpho.i (oln/s/34_swilena_mo 1.4 640))
  (tools/swilena/meta/swilena_imagesize.i (oln/s/35_swilena_im 1.2 640))
  (tools/swilena/meta/swilena_image.i (oln/s/36_swilena_im 1.7 640))
  (tools/swilena/meta/swilena_exception.i (oln/s/37_swilena_ex 1.4 640))
  (tools/swilena/meta/swilena_describe.i (oln/s/38_swilena_de 1.3 640))
  (tools/swilena/meta/swilena_decl.i (oln/s/39_swilena_de 1.2 640))
  (tools/swilena/meta/swilena_core.i (oln/s/40_swilena_co 1.1 640))


  (integre/ntg/int.hh (oln/s/0_int.hh 1.3 640))
  (integre/ntg/float.hh (oln/s/1_float.hh 1.3 640))
  (integre/ntg/real/real_value.hh (oln/s/15_real_value 1.2.1.1 640))
  (integre/ntg/core/internal/traits.hh (oln/s/16_traits.hh 1.4.1.2 640))
  (integre/ntg/core/internal/macros.hh (oln/s/17_macros.hh 1.3 640))
  (integre/ntg/core/type_traits.hh (oln/s/18_type_trait 1.3 640))
  (integre/ntg/core/macros.hh (oln/s/19_macros.hh 1.13 640))
  (integre/ntg/core/abstract_hierarchy.hh (oln/s/20_abstract_h 1.2.1.2 640))
  (integre/ntg/basics.hh (oln/s/21_basics.hh 1.3.1.1 640))
  (integre/ntg/vect/vect_value.hh (oln/s/22_vect_value 1.2.1.1 640))
  (integre/ntg/enum/enum_value.hh (oln/s/23_enum_value 1.1.1.1 640))
  (integre/tests/types/tests/range4 (oln/s/24_range4 1.2 640))
  (integre/tests/utils/tests/debug1 (oln/s/41_debug1 1.4 640))
  
  (integre/tests/utils/Makefile.am (oln/s/43_Makefile.a 1.3 640))

  (integre/ntg/core/contract.hh (oln/s/45_contract.h 1.3 640))
  (integre/ntg/real/builtin_int.hh (oln/s/46_builtin_in 1.1 640))
  (integre/ntg/real/builtin_float.hh (oln/s/47_builtin_fl 1.2.1.2 640))
  (integre/ntg/real/builtin_properties.hh (oln/s/48_builtin_pr 1.1 640))
  (integre/ntg/enum/builtin_bool.hh (oln/s/50_builtin_bo 1.4.1.1 640))
  (integre/tests/sanity/includes.test (oln/s/51_includes.t 1.1 750))
  (integre/tests/sanity/Makefile.am (oln/t/0_Makefile.a 1.2 640))
  (metalic/tests/sanity/includes.test (oln/t/1_includes.t 1.1 750))
  (metalic/tests/sanity/Makefile.am (oln/t/2_Makefile.a 1.2 640))
  (integre/tests/types/tests/int_sc5 (oln/t/3_int_sc5 1.3 640))

;; Files added by populate at Mon, 02 Jun 2003 17:20:22 +0200,
;; to version 9.5(w), by burrus_n:

  (integre/ntg/vec.hh (oln/t/10_vec.hh 1.1 640))
  (integre/ntg/range.hh (oln/t/11_range.hh 1.1 640))
  (integre/ntg/cycle.hh (oln/t/12_cycle.hh 1.1 640))
  (integre/ntg/cplx.hh (oln/t/13_cplx.hh 1.1 640))
  (integre/ntg/color.hh (oln/t/14_color.hh 1.1 640))
  (integre/ntg/bin.hh (oln/t/15_bin.hh 1.1 640))

;; Files added by populate at Mon, 02 Jun 2003 17:25:14 +0200,
;; to version 9.7(w), by burrus_n:

  (integre/ntg/real/range.hh (oln/t/16_range.hh 1.3.1.1 640))
  (integre/ntg/real/cycle.hh (oln/t/17_cycle.hh 1.2.1.1 640))
  (integre/ntg/vect/vec.hh (oln/t/18_vec.hh 1.7.1.2 640))
  (integre/ntg/vect/cplx.hh (oln/t/19_cplx.hh 1.5 640))
  (integre/ntg/color/color.hh (oln/t/20_color.hh 1.7 640))
  (integre/ntg/enum/bin.hh (oln/t/21_bin.hh 1.5.1.2 640))

;; Files deleted by populate at Mon, 30 Jun 2003 20:01:55 +0200,
;; from version 9.10(w), by nes:

  ; (integre/tests/types/tests/debug1 ())

;; Files added by populate at Fri, 11 Jul 2003 18:21:00 +0200,
;; to version 9.11(w), by burrus_n:

  (olena/tests/core/tests/print_image (oln/t/22_print_imag 1.3 640))

;; Files added by populate at Sat, 12 Jul 2003 20:10:15 +0200,
;; to version 9.14(w), by burrus_n:

  (integre/tests/types/tests/char1 (oln/t/23_char1 1.2 600))
  (olena/tests/core/image_print.sh (oln/t/24_image_prin 1.2 640))


  (olena/oln/core/abstract/image.hh (oln/t/25_image.hh 1.32 640))
  (olena/oln/core/abstract/image_with_dim.hh (oln/t/26_image_with 1.22 600))
  (olena/oln/core/abstract/image_with_impl.hh (oln/t/27_image_with 1.14.1.12 640))
  (olena/oln/core/abstract/image_with_type.hh (oln/t/28_image_with 1.12 640))
  (olena/oln/core/impl/image_impl.hh (oln/t/29_image_impl 1.19 640))
  (olena/oln/core/impl/image_array.hh (oln/t/30_image_arra 1.17 640))
  (olena/tests/core/tests/image1 (oln/t/31_image1 1.5 640))
  (olena/oln/core/impl/image_array3d.hh (oln/t/32_image_arra 1.12 640))
  (olena/oln/core/impl/image_array2d.hh (oln/t/33_image_arra 1.14 640))
  (olena/oln/core/impl/image_array1d.hh (oln/t/34_image_arra 1.14 640))
  (olena/tests/core/tests/borders (oln/t/35_borders 1.4 640))
  (olena/tests/core/tests/clone (oln/t/36_clone 1.2 640))
  (olena/tests/core/tests/ref (oln/t/37_ref 1.4 640))
  (olena/oln/io/pnm_common.hh (oln/t/40_pnm_common 1.5 600))
  (olena/oln/io/image_base.hh (oln/t/41_image_base 1.5 600))
  (olena/oln/io/image_write.hh (oln/t/42_image_writ 1.10 600))
  (olena/oln/io/stream_wrapper.hh (oln/t/43_stream_wra 1.3.1.3 600))
  (olena/oln/io/utils.hh (oln/t/44_utils.hh 1.4 600))
  (olena/oln/io/image_read.hh (oln/t/45_image_read 1.10 600))
  (olena/tests/level/Makefile.am (oln/t/46_Makefile.a 1.3 600))
  (olena/tests/level/tests/cc (oln/t/47_cc.cc 1.2 600))
  (olena/tests/level/tests/compare (oln/t/48_compare.cc 1.2 600))
  (olena/tests/level/tests/connected (oln/t/49_connected. 1.3 600))
  (olena/tests/level/tests/invert (oln/t/50_invert.cc 1.3 600))
  (olena/tests/level/tests/set_level (oln/t/51_set_level. 1.2 600))
  (olena/tests/level/tests/threshold (oln/u/0_threshold. 1.2 600))
  (olena/tests/core/tests/window (oln/u/1_window 1.2 640))
  (olena/tests/core/tests/neighborhood (oln/u/2_neighborho 1.2 640))
  (olena/oln/core/abstract/window_base.hh (oln/u/3_window_bas 1.13 640))
  (olena/oln/core/abstract/windownd.hh (oln/u/4_windownd.h 1.11 640))
  (olena/oln/core/abstract/w_windownd.hh (oln/u/5_w_windownd 1.10 640))
  (olena/oln/core/abstract/neighborhoodnd.hh (oln/u/6_neighborho 1.10 640))
  (olena/tests/core/tests/traverse (oln/u/7_traverse 1.2 640))
  (integre/tests/types/tests/int_u7 (oln/u/8_int_u7 1.2 640))
  (olena/oln/io/pnm_read_data.hh (oln/u/9_pnm_read_d 1.6 640))
  (olena/oln/io/pnm_write_data.hh (oln/u/10_pnm_write_ 1.7 640))
  (olena/oln/io/image.hh (oln/u/11_image.hh 1.2 600))
  (olena/tests/convert/conv.cc (oln/u/12_conv.cc 1.2 640))
  (olena/tests/convert/conv.hh (oln/u/13_conv.hh 1.1 640))
  (olena/tests/io/tests/bin (oln/u/20_bin.cc 1.2 640))
  (olena/img/black.pbm (oln/u/21_black.pbm 1.1 640))
  (olena/img/white.pbm (oln/u/22_white.pbm 1.1 640) :no-keywords)
  (olena/tests/topo/tests/dmap (oln/u/23_test-dmap. 1.3 600))
  (olena/tests/core/multiple_sources_2.cc (oln/u/24_multiple_s 1.1 640))
  (olena/tests/core/multiple_sources_1.cc (oln/u/25_multiple_s 1.1 640))
  (olena/tests/utils/Makefile.am (oln/u/26_Makefile.a 1.2 600))
  (olena/tests/utils/tests/histogram (oln/u/27_histogram. 1.2.1.5 600))
  (olena/tests/utils/tests/stat (oln/u/28_stat.cc 1.3 600))
  (olena/tests/utils/tests/timer (oln/u/29_timer.cc 1.6 600))
  (olena/tests/topo/tests/tarjan (oln/u/30_test-tarja 1.3 600))
  (olena/oln/convert/abstract/conversion.hh (oln/u/31_conversion 1.6 640))
  (olena/tests/check/Makefile.runtests (oln/u/32_Makefile.r 1.3 600))
  (contrib/runtests (oln/u/33_runtests 1.4 700))
  (metalic/tests/check/Makefile.runtests (oln/u/34_Makefile.r 1.1 600))
  (integre/tests/check/Makefile.runtests (oln/u/35_Makefile.r 1.2 600))
  (integre/tests/check/Makefile.flags (oln/u/36_Makefile.f 1.1 600))
  (olena/tests/math/tests/macros (oln/u/37_macros 1.3 600))
  (olena/tests/math/Makefile.am (oln/u/38_Makefile.a 1.1 600))
  (olena/tests/io/tests/1d (oln/u/39_1d 1.3 640))
  (olena/img/lena1d.ppm (oln/u/40_lena1d.ppm 1.1 640))
  (olena/tests/core/tests/image_list (oln/u/41_image_list 1.2 600))
  (olena/tests/io/tests/3d (oln/u/42_3d 1.3 600))
  (olena/oln/io/pnm_read_2d.hh (oln/u/43_pnm_read_2 1.5 600))
  (olena/oln/io/pnm_write_2d.hh (oln/u/44_pnm_write_ 1.7 600))
  (olena/img/lena3d.ppm (oln/u/45_lena3d.ppm 1.1 600))
  (olena/tests/io/tests/se_3d (oln/u/46_se_3d 1.2 600))
  (olena/tests/io/tests/se_1d (oln/u/47_se_1d 1.2 600))
  (olena/img/wrong_3d.pbm (oln/u/48_wrong_3d.p 1.1 600) :no-keywords)
  (olena/img/se_3d.pbm (oln/u/49_se_3d.pbm 1.1 600) :no-keywords)
  (olena/img/se_1d.pbm (oln/u/50_se_1d.pbm 1.1 600))
  (olena/img/se9_1d.pbm (oln/u/51_se9_1d.pbm 1.1 600))
  (olena/tests/core/tests/label_images (oln/v/0_label_imag 1.1 600))
  (olena/oln/topo/combinatorial-map/internal/allfunc.hh (oln/v/1_allfunc.hh 1.2 600))
  (olena/oln/topo/combinatorial-map/internal/alpha.hh (oln/v/2_alpha.hh 1.3 600))
  (olena/oln/topo/combinatorial-map/internal/anyfunc.hh (oln/v/3_anyfunc.hh 1.5 600))
  (olena/oln/topo/combinatorial-map/internal/beta.hh (oln/v/5_beta.hh 1.4 600))
  (olena/oln/topo/combinatorial-map/internal/lambda.hh (oln/v/6_lambda.hh 1.4 600))
  (olena/oln/topo/combinatorial-map/internal/level.hh (oln/v/7_level.hh 1.4 600))
  (olena/oln/topo/combinatorial-map/internal/sigma.hh (oln/v/9_sigma.hh 1.4 600))
  (olena/oln/core/abstract/image_with_type_with_dim.hh (oln/v/11_image_with 1.6 600))
  (olena/tests/core/tests/image2 (oln/v/12_image2 1.3 600))
  (olena/tests/utils/tests/copy (oln/v/13_copy 1.2 600))
;; Files added by populate at Mon, 25 Aug 2003 13:48:55 +0200,
;; to version 10.9(w), by raph:

  (olena/conf/README (oln/v/14_README 1.1 640))

;; Files deleted by depopulate at Sun, 21 Sep 2003 22:59:12 +0200,
;; from version 10.19(w), by nes:

  ; (tools/swilena/java/Makefile.am ())

;; Files added by populate at Sun, 21 Sep 2003 22:59:15 +0200,
;; to version 10.19(w), by nes:

  (tools/swilena/python/tests/Makefile.am (oln/v/15_Makefile.a 1.6 600))
  (tools/swilena/python/tests/simple1.py (oln/v/16_simple1.py 1.4 700))
  (tools/swilena/ruby/Makefile.am (oln/v/17_Makefile.a 1.7 600))
  (tools/swilena/ruby/tests/Makefile.am (oln/v/18_Makefile.a 1.5 600))
  (tools/swilena/ruby/tests/simple1.rb (oln/v/19_simple1.rb 1.4 700))

;; Files added by populate at Mon, 22 Sep 2003 00:03:13 +0200,
;; to version 10.21(w), by nes:

  (tools/swilena/python/swilena_display.py (oln/v/20_swilena_di 1.1 600))
  (tools/swilena/ruby/swilena_display.rb (oln/v/21_swilena_di 1.1 700))

;; Files added by populate at Mon, 22 Sep 2003 00:32:14 +0200,
;; to version 10.21(w), by nes:

  (tools/swilena/doc/examples/ruby/simple.rb (oln/v/22_simple.rb 1.4 710))
  (tools/swilena/doc/examples/python/simple.py (oln/v/23_simple.py 1.4 710))


;; Files added by populate at Sat, 27 Sep 2003 18:32:26 +0200,
;; to version 10.24(w), by burrus_n:

  (tools/swilena/generate_morpho_instantiations.py (oln/v/24_generate_m 1.8 700))

;; Files deleted by populate at Sat, 27 Sep 2003 18:33:27 +0200,
;; from version 10.24(w), by nes:

  ; (tools/swilena/meta/swilena_ntg_cplx.i ())
  ; (tools/swilena/meta/swilena_ntg_int_s.i ())
  ; (tools/swilena/meta/swilena_ntg_int_u.i ())

;; Files added by populate at Mon, 29 Sep 2003 19:17:53 +0200,
;; to version 10.26(w), by nes:

  (tools/swilena/src/Makefile.am (oln/v/25_Makefile.a 1.4 640))

;; Files added by populate at Wed, 08 Oct 2003 11:13:23 +0200,
;; to version 10.27(w), by burrus_n:

  (olena/tests/morpho/tests/builtin_types (oln/v/30_builtin_ty 1.3 640))

;; Files added by populate at Sun, 02 Nov 2003 17:15:34 +0100,
;; to version 10.32(w), by nes:

  (olena/tests/core/tests/without_ntg (oln/v/31_without_nt 1.2 600))

;; Files added by populate at Mon, 03 Nov 2003 21:56:15 +0100,
;; to version 10.33(w), by burrus_n:

  (olena/tests/io/tests/headers (oln/v/32_headers 1.2 600))

;; Files added by populate at Fri, 07 Nov 2003 17:21:47 +0100,
;; to version 10.35(w), by burrus_n:

  (olena/oln/convert/cast.hh (oln/v/35_cast.hh 1.2 600))

;; Files added by populate at Fri, 07 Nov 2003 17:29:58 +0100,
;; to version 10.36(w), by burrus_n:

  (olena/tests/morpho/tests/overall_benchs (oln/v/36_overall_be 1.2 640))
  (olena/tests/core/tests/benchs (oln/v/37_benchs 1.2 600))

;; Files added by populate at Sun, 09 Nov 2003 02:01:01 +0100,
;; to version 10.38(w), by burrus_n:

  (tools/swilena/meta/swilena_ntg_macros.i (oln/v/39_swilena_nt 1.1 600))

;; Files added by populate at Mon, 10 Nov 2003 11:23:59 +0100,
;; to version 10.39(w), by burrus_n:

  (tools/swilena/python/tests/morpho.py (oln/v/47_morpho.py 1.2 700))
  (tools/swilena/meta/swilena_arith.i (oln/v/48_swilena_ar 1.1 640))
  (tools/swilena/meta/swilena_conversions.i (oln/v/49_swilena_co 1.1 600))
  (tools/swilena/generate_conversions_instantiations.py (oln/v/50_generate_c 1.1 700))
  (tools/swilena/generate_arith_instantiations.py (oln/v/51_generate_a 1.1 700))

;; Files added by populate at Mon, 10 Nov 2003 14:06:22 +0100,
;; to version 10.39(w), by burrus_n:

  (tools/swilena/python/tests/arith.py (oln/w/0_arith.py 1.1 750))
  (tools/swilena/python/tests/conversions.py (oln/w/1_conversion 1.1 750))

;; Files added by populate at Mon, 10 Nov 2003 14:10:01 +0100,
;; to version 10.40(w), by burrus_n:

  (tools/swilena/python/Makefile.am (oln/w/2_Makefile.a 1.7 640))
  (tools/swilena/python/swilena_all1d.py (oln/w/3_swilena_al 1.2 640))
  (tools/swilena/python/swilena_all2d.py (oln/w/4_swilena_al 1.2 640))
  (tools/swilena/python/swilena_all3d.py (oln/w/5_swilena_al 1.2 640))

;; Files added by populate at Wed, 26 Nov 2003 11:35:29 +0100,
;; to version 10.41(w), by burrus_n:

  (integre/tests/types/tests/int_u8 (oln/w/6_int_u8 1.2 640))

;; Files added by populate at Mon, 08 Dec 2003 10:54:08 +0100,
;; to version 10.45(w), by david:

  (doc/hierarchies/structelt.dia (oln/w/7_structelt. 1.1 640) :no-keywords)
  (doc/hierarchies/point.dia (oln/w/8_point.dia 1.1 640) :no-keywords)
  (doc/hierarchies/new_olena_model.dia (oln/w/9_new_olena_ 1.1 640) :no-keywords)
  (doc/hierarchies/misc.dia (oln/w/10_misc.dia 1.1 640) :no-keywords)
  (doc/hierarchies/labels.dia (oln/w/11_labels.dia 1.1 640) :no-keywords)
  (doc/hierarchies/iter.dia (oln/w/12_iter.dia 1.1 640) :no-keywords)
  (doc/hierarchies/implementation.dia (oln/w/13_implementa 1.1 640))

;; Files deleted by depopulate at Thu, 22 Jan 2004 21:08:59 +0100,
;; from version 10.48(w), by palma_g:

  ; (olena/oln/convert/nrgbhsi.hh ())
  ; (olena/oln/convert/nrgbhsl.hh ())
  ; (olena/oln/convert/nrgbhsv.hh ())
  ; (olena/oln/convert/nrgbyiq.hh ())
  ; (olena/oln/convert/nrgbyuv.hh ())

;; Files added by populate at Thu, 22 Jan 2004 21:09:49 +0100,
;; to version 10.48(w), by palma_g:

  (olena/oln/convert/rgbhsv.hh (oln/j/35_rgbhsv.hh 1.4 644))
  (olena/oln/convert/rgbhsl.hh (oln/j/36_rgbhsl.hh 1.6 644))
  (olena/oln/convert/rgbhsi.hh (oln/j/37_rgbhsi.hh 1.4 644))
  (olena/oln/convert/rgbyuv.hh (oln/j/38_rgbyuv.hh 1.4 644))
  (olena/oln/convert/rgbyiq.hh (oln/j/39_rgbyiq.hh 1.4 644))


  (olena/oln/snakes/snakes_base.hxx (oln/f/11_snakes_bas 1.1 644))
  (olena/oln/snakes/snakes_base.hh (oln/f/50_snakes_bas 1.4 644))
  (olena/oln/snakes/energies.hxx (oln/j/21_energies.h 1.1 644))
  (olena/oln/snakes/energies.hh (oln/j/22_energies.h 1.3 644))
  (olena/oln/snakes/segment.hxx (oln/j/23_segment.hx 1.1 644))
  (olena/oln/snakes/greedy.hxx (oln/j/24_greedy.hxx 1.1 644))
  (olena/oln/snakes/greedy.hh (oln/j/25_greedy.hh 1.2 644))
  (olena/oln/snakes/node.hh (oln/j/32_node.hh 1.3 644))
  (olena/oln/snakes/node.hxx (oln/j/33_node.hxx 1.1 644))
  (olena/oln/snakes/segment.hh (oln/j/34_segment.hh 1.3 644))
;; Files added by populate at Fri, 30 Jan 2004 10:19:55 +0100,
;; to version 10.56(w), by palma_g:

  (olena/tests/convol/tests/uniform2_gauss (oln/j/40_uniform2_g 1.2 644))
  (olena/tests/convol/tests/uniform_gauss (oln/j/41_uniform_ga 1.3 644))


  (olena/oln/convert/value_to_point.hh (oln/j/43_value_to_p 1.5 644))

  (olena/tests/morpho/tests/area (oln/j/44_area 1.3 644))
;; Files added by populate at Fri, 06 Feb 2004 16:00:19 +0100,
;; to version 10.57(w), by palma_g:

  (olena/oln/morpho/attributes.hh (oln/j/45_attributes 1.13.1.7 600))

;; Files added by populate at Tue, 10 Feb 2004 15:26:15 +0100,
;; to version 10.62(w), by palma_g:

  (olena/oln/core/abstract/behavior.hh (oln/j/46_behavior.h 1.5 644))

;; Files added by populate at Tue, 10 Feb 2004 15:26:20 +0100,
;; to version 10.62(w), by palma_g:

  (olena/oln/core/behavior.hh (oln/j/47_behavior.h 1.6 644))


  (olena/oln/morpho/attribute_closing_opening_map.hxx (oln/j/48_attribute_ 1.2 644))
  (olena/oln/morpho/attribute_closing_opening_map.hh (oln/j/49_attribute_ 1.13 600))
  (olena/oln/utils/special_points.hh (oln/j/50_special_po 1.3 644))
  (olena/tests/morpho/tests/attribute (oln/j/51_attribute 1.6 644))
;; Files added by populate at Mon, 16 Feb 2004 18:59:27 +0100,
;; to version 10.64(w), by palma_g:

  (olena/tests/morpho/tests/attr_op_cl (oln/k/0_attr_op_cl 1.5 644))


  (doc/ref/exdoc.pl (oln/v/26_exdoc.pl 1.6 755))
  (doc/ref/doxygen.config.in (oln/v/29_doxygen.co 1.5 644))
  (doc/ref/exdoc.mk.in (oln/k/4_exdoc.mk.i 1.1 644))
  
  (doc/ref/img_conv.pl (oln/k/6_img_conv.p 1.3 700))
;; Files deleted by depopulate at Wed, 25 Feb 2004 16:41:09 +0100,
;; from version 10.67(w), by palma_g:

  ; (doc/ref/exdoc.config.in ())

;; Files added by populate at Wed, 25 Feb 2004 16:41:16 +0100,
;; to version 10.67(w), by palma_g:

  (doc/ref/out/exdoc.config.in (oln/k/7_exdoc.conf 1.10 644))

;; Files deleted by depopulate at Tue, 09 Mar 2004 10:41:51 +0100,
;; from version 10.70(w), by palma_g:

  ; (doc/ref/html () :directory)


  (integre/ntg/core/pred_succ.hh (oln/k/8_pred_succ. 1.3 644))
;; Files added by populate at Fri, 19 Mar 2004 15:49:20 +0100,
;; to version 10.97(w), by palma_g:

  (olena/oln/utils/buffer.hxx (oln/k/9_buffer.hxx 1.3 644))
  (olena/oln/utils/buffer.hh (oln/k/10_buffer.hh 1.2 644))
  (olena/oln/utils/key.hxx (oln/k/11_key.hxx 1.3 644))
  (olena/oln/utils/key.hh (oln/k/12_key.hh 1.2 644))
  (olena/oln/utils/md5.hxx (oln/k/13_md5.hxx 1.4 644))
  (olena/oln/utils/md5.hh (oln/k/14_md5.hh 1.4 644))

;; Files added by populate at Fri, 19 Mar 2004 17:25:06 +0100,
;; to version 10.99(w), by palma_g:

  (olena/tests/utils/tests/md5 (oln/k/15_md5 1.2 644))

;; Files added by populate at Tue, 23 Mar 2004 13:50:28 +0100,
;; to version 10.100(w), by palma_g:

  
  
  
  
  
  

;; Files added by populate at Tue, 23 Mar 2004 14:11:07 +0100,
;; to version 10.103(w), by palma_g:

  (olena/tests/core/tests/md5_apply (oln/k/22_md5_apply 1.2 644))

;; Files deleted by depopulate at Tue, 23 Mar 2004 14:23:33 +0100,
;; from version 10.104(w), by palma_g:

  ; (olena/tests/convol/tests/out_olena_oln_convol_fast_gaussian_hh5 ())
  ; (olena/tests/convol/tests/out_olena_oln_convol_fast_gaussian_hh4 ())
  ; (olena/tests/convol/tests/out_olena_oln_convol_fast_gaussian_hh3 ())
  ; (olena/tests/convol/tests/out_olena_oln_convol_fast_gaussian_hh2 ())
  ; (olena/tests/convol/tests/out_olena_oln_convol_fast_gaussian_hh1 ())
  ; (olena/tests/convol/tests/out_olena_oln_convol_fast_gaussian_hh0 ())

;; Files added by populate at Tue, 23 Mar 2004 14:24:00 +0100,
;; to version 10.104(w), by palma_g:

  (olena/tests/convol/tests/md5_convol_fast_gaussian_hh5 (oln/k/23_md5_convol 1.3 644))
  (olena/tests/convol/tests/md5_convol_fast_gaussian_hh4 (oln/k/24_md5_convol 1.4 644))
  (olena/tests/convol/tests/md5_convol_fast_gaussian_hh3 (oln/k/25_md5_convol 1.4 644))
  (olena/tests/convol/tests/md5_convol_fast_gaussian_hh2 (oln/k/26_md5_convol 1.3 644))
  (olena/tests/convol/tests/md5_convol_fast_gaussian_hh1 (oln/k/27_md5_convol 1.4 644))
  (olena/tests/convol/tests/md5_convol_fast_gaussian_hh0 (oln/k/28_md5_convol 1.4 644))

;; Files added by populate at Tue, 23 Mar 2004 14:29:08 +0100,
;; to version 10.105(w), by palma_g:

  (olena/tests/morpho/tests/md5_morpho_watershed_hh1 (oln/k/29_md5_morpho 1.3 644))
  (olena/tests/morpho/tests/md5_morpho_watershed_hh0 (oln/k/30_md5_morpho 1.3 644))
  (olena/tests/morpho/tests/md5_morpho_top_hat_inc7 (oln/k/31_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_top_hat_inc6 (oln/k/32_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_top_hat_inc5 (oln/k/33_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_top_hat_inc4 (oln/k/34_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_top_hat_inc3 (oln/k/35_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_top_hat_inc2 (oln/k/36_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_top_hat_inc1 (oln/k/37_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_top_hat_inc0 (oln/k/38_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_thinning_inc0 (oln/k/39_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_thickening_inc0 (oln/k/40_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_reconstruction_hh5 (oln/k/41_md5_morpho 1.3 644))
  (olena/tests/morpho/tests/md5_morpho_reconstruction_hh4 (oln/k/42_md5_morpho 1.3 644))
  (olena/tests/morpho/tests/md5_morpho_reconstruction_hh3 (oln/k/43_md5_morpho 1.3 644))
  (olena/tests/morpho/tests/md5_morpho_reconstruction_hh2 (oln/k/44_md5_morpho 1.3 644))
  (olena/tests/morpho/tests/md5_morpho_reconstruction_hh1 (oln/k/45_md5_morpho 1.3 644))
  (olena/tests/morpho/tests/md5_morpho_reconstruction_hh0 (oln/k/46_md5_morpho 1.3 644))
  (olena/tests/morpho/tests/md5_morpho_opening_inc0 (oln/k/47_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_laplacian_inc1 (oln/k/48_md5_morpho 1.3 644))
  (olena/tests/morpho/tests/md5_morpho_laplacian_inc0 (oln/k/49_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_hit_or_miss_inc5 (oln/k/50_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_hit_or_miss_inc4 (oln/k/51_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_hit_or_miss_inc3 (oln/l/0_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_hit_or_miss_inc2 (oln/l/1_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_hit_or_miss_inc1 (oln/l/2_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_hit_or_miss_inc0 (oln/l/3_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_gradient_inc0 (oln/l/4_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_geodesic_erosion_hh1 (oln/l/5_md5_morpho 1.3 644))
  (olena/tests/morpho/tests/md5_morpho_geodesic_erosion_hh0 (oln/l/6_md5_morpho 1.3 644))
  (olena/tests/morpho/tests/md5_morpho_geodesic_dilation_hh1 (oln/l/7_md5_morpho 1.3 644))
  (olena/tests/morpho/tests/md5_morpho_geodesic_dilation_hh0 (oln/l/8_md5_morpho 1.3 644))
  (olena/tests/morpho/tests/md5_morpho_fast_morpho_hxx0 (oln/l/9_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_extrema_killer_hh3 (oln/l/10_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_extrema_killer_hh2 (oln/l/11_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_extrema_killer_hh1 (oln/l/12_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_extrema_killer_hh0 (oln/l/13_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_extrema_hxx1 (oln/l/14_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_extrema_hxx0 (oln/l/15_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_erosion_hh2 (oln/l/16_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_erosion_hh1 (oln/l/17_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_erosion_hh0 (oln/l/18_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_dilation_hh1 (oln/l/19_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_dilation_hh0 (oln/l/20_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_closing_inc0 (oln/l/21_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_map_hh9 (oln/l/22_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_map_hh8 (oln/l/23_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_map_hh7 (oln/l/24_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_map_hh6 (oln/l/25_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_map_hh5 (oln/l/26_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_map_hh4 (oln/l/27_md5_morpho 1.2 644))
  
  
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_map_hh17 (oln/l/30_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_map_hh16 (oln/l/31_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_map_hh15 (oln/l/32_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_map_hh14 (oln/l/33_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_map_hh13 (oln/l/34_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_map_hh12 (oln/l/35_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_map_hh11 (oln/l/36_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_map_hh10 (oln/l/37_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_map_hh1 (oln/l/38_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_map_hh0 (oln/l/39_md5_morpho 1.2 644))
  
  
  
  
  
  
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_hh9 (oln/l/46_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_hh8 (oln/l/47_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_hh7 (oln/l/48_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_hh6 (oln/l/49_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_hh5 (oln/l/50_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_hh4 (oln/l/51_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_hh3 (oln/m/0_md5_morpho 1.3 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_hh2 (oln/m/1_md5_morpho 1.3 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_hh17 (oln/m/2_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_hh16 (oln/m/3_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_hh15 (oln/m/4_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_hh14 (oln/m/5_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_hh13 (oln/m/6_md5_morpho 1.3 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_hh12 (oln/m/7_md5_morpho 1.3 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_hh11 (oln/m/8_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_hh10 (oln/m/9_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_hh1 (oln/m/10_md5_morpho 1.2 644))
  (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_hh0 (oln/m/11_md5_morpho 1.2 644))

;; Files added by populate at Tue, 23 Mar 2004 15:45:54 +0100,
;; to version 10.106(w), by palma_g:

  (olena/tests/topo/tests/md5_topo_tarjan_flat-zone_hh0 (oln/m/12_md5_topo_t 1.3 644))
  (olena/tests/topo/tests/md5_topo_dmap_hh0 (oln/m/13_md5_topo_d 1.2 644))

;; Files added by populate at Tue, 23 Mar 2004 15:56:32 +0100,
;; to version 10.107(w), by palma_g:

  (olena/tests/level/tests/md5_level_threshold_hh0 (oln/m/14_md5_level_ 1.2 644))
  (olena/tests/level/tests/md5_level_set_level_hh0 (oln/m/15_md5_level_ 1.2 644))

;; Files added by populate at Tue, 23 Mar 2004 16:04:56 +0100,
;; to version 10.108(w), by palma_g:

  (olena/tests/level/tests/md5_level_hh0 (oln/m/16_md5_level_ 1.2 644))

;; Files added by populate at Thu, 25 Mar 2004 14:59:46 +0100,
;; to version 10.109(w), by palma_g:

  (olena/oln/morpho/environments.hh (oln/m/17_environmen 1.1 644))


  (olena/oln/morpher/generic_morpher.hh (oln/m/18_generic_mo 1.6 600))
  (olena/tests/convol/tests/nagao (oln/m/19_nagao 1.3 600))
  (integre/tests/types/tests/ntg_compare_nb_comp (oln/m/20_ntg_compar 1.2 600))
  (olena/oln/convol/nagao.hxx (oln/m/21_nagao.hxx 1.1 600))
  (olena/oln/convol/nagao.hh (oln/m/22_nagao.hh 1.3 600))
  (olena/oln/utils/se_stat.hh (oln/m/23_se_stat.hh 1.2 600))
  (olena/oln/utils/se_stat.hxx (oln/m/24_se_stat.hx 1.2 600))
  (olena/oln/morpher/subq_morpher.hh (oln/m/25_subq_morph 1.4 600))
  (olena/oln/morpher/color_morpher.hh (oln/m/26_color_morp 1.5 600))
  (olena/tests/morpher/Makefile.am (oln/m/27_Makefile.a 1.1 600))
  
  
  
  
  
  
  
  
  
  
  
  
  (olena/oln/morpher/piece_morpher.hh (oln/m/40_piece_morp 1.3 600))
  (olena/oln/morpher/iter_morpher.hh (oln/m/41_iter_morph 1.2 600))
  (olena/oln/morpher/slicing_morpher.hh (oln/m/42_slicing_mo 1.4 600))

  (olena/tests/morpher/tests/compose_morph (oln/m/43_compose_mo 1.2 600))
  (olena/tests/morpher/tests/sq_morph (oln/m/44_sq_morph 1.2 600))
  (olena/tests/morpher/tests/color_morph (oln/m/45_color_morp 1.4 600))
;; Files added by populate at Wed, 31 Mar 2004 19:07:28 +0200,
;; to version 10.123(w), by palma_g:

  (olena/oln/topo/tarjan/tarjan_with_attr.hh (oln/m/46_tarjan_wit 1.4 644))
  (olena/oln/topo/tarjan/tarjan.hh (oln/m/47_tarjan.hh 1.4 644))


  (olena/tests/morpher/tests/iter (oln/q/3_iter 1.2 600))
  (olena/tests/morpher/tests/piece (oln/q/43_piece 1.2 600))
  (olena/tests/morpher/tests/slicing (oln/q/44_slicing 1.2 600))

  (olena/tests/morpho/tests/gradient (oln/r/1_gradient 1.2 600))
  (integre/ntg/makefile.src (oln/r/2_makefile.s 1.1 644))
  (metalic/mlc/makefile.src (oln/r/3_makefile.s 1.1 644))
  (olena/oln/makefile.src (oln/r/4_makefile.s 1.7 644))

  (olena/oln/convol/slow_gaussian.hh (oln/r/7_slow_gauss 1.4 644))
  (olena/oln/convol/slow_gaussian.hxx (oln/r/8_slow_gauss 1.4 644))
;; Files added by populate at Sun, 23 May 2004 13:50:56 +0200,
;; to version 10.186(w), by palma_g:

  (olena/oln/utils/qsort.hh (oln/r/9_qsort.hh 1.3 644))


  (olena/oln/transforms/shapelets.hh (oln/r/10_shapelets. 1.5 600))
  (olena/tests/convol/tests/slow_gaussian (oln/r/11_slow_gauss 1.1 600))
  (olena/oln/convol/fast_convolution.hh (oln/r/12_fast_convo 1.4 600))
  (olena/tests/convol/tests/fast_convol (oln/r/13_fast_convo 1.2 600))
  (olena/oln/morpher/func_morpher.hh (oln/r/14_func_morph 1.2 600))
  (olena/oln/core/fpoint2d.hh (oln/r/15_fpoint2d.h 1.2 600))
  (olena/oln/core/fdpoint2d.hh (oln/r/16_fdpoint2d. 1.1 600))
  (olena/oln/geom/translate.hh (oln/s/6_translate. 1.1 600))
  (olena/oln/geom/rotate.hh (oln/u/14_rotate.hh 1.1 600))
  (olena/oln/morpher/border_morpher.hh (oln/u/15_border_mor 1.2 600))
  (olena/tests/morpher/tests/border (oln/u/16_border 1.1 600))
  (tools/utilities/convert/color_space.cc (oln/u/19_color_spac 1.3 600))
  (tools/utilities/convert/Makefile.am (oln/v/10_Makefile.a 1.4 600))
;; Files deleted by depopulate at Fri, 09 Jul 2004 17:22:25 +0200,
;; from version 10.202(w), by palma_g:

  ; (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_map_hh3 ())
  ; (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_map_hh2 ())

;; Files deleted by depopulate at Fri, 16 Jul 2004 12:19:03 +0200,
;; from version 10.206(w), by palma_g:

  ; (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_light_hh5 ())
  ; (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_light_hh4 ())
  ; (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_light_hh3 ())
  ; (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_light_hh2 ())
  ; (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_light_hh1 ())
  ; (olena/tests/morpho/tests/md5_morpho_attribute_closing_opening_light_hh0 ())

;; Files added by populate at Thu, 09 Sep 2004 11:18:36 +0200,
;; to version 10.214(w), by palma_g:

  (olena/oln/morpho/abstract/attribute.hxx (oln/v/38_attribute. 1.1 644))
  (olena/oln/morpho/abstract/attribute.hh (oln/v/40_attribute. 1.1 644))

;; Files added by populate at Mon, 13 Sep 2004 13:14:16 +0200,
;; to version oln_2004_paradigm.1(w), by palma_g:

  (olena/oln/core/fwd_niter2d.hh (oln/v/41_fwd_niter2 1.1 600))
  (olena/oln/core/fwd_niter1d.hh (oln/v/42_fwd_niter1 1.1 600))
  (olena/oln/core/fwd_diter2d.hh (oln/v/43_fwd_diter2 1.1 600))
  (olena/oln/core/fwd_diter1d.hh (oln/v/44_fwd_diter1 1.1 600))
  (olena/oln/core/dim3d.hh (oln/v/45_dim3d.hh 1.1 644))
  (olena/oln/core/dim2d.hh (oln/v/46_dim2d.hh 1.1 600))
  (olena/oln/core/dim1d.hh (oln/w/14_dim1d.hh 1.2 600))
  (olena/oln/core/constants.hh (oln/w/15_constants. 1.1 600))
  (olena/oln/core/ch_value.hh (oln/w/16_ch_value.h 1.1 600))

;; Files added by populate at Mon, 13 Sep 2004 13:14:24 +0200,
;; to version oln_2004_paradigm.1(w), by palma_g:

  (olena/oln/core/abstract/point_like.hh (oln/w/17_point_like 1.1 600))
  (olena/oln/core/abstract/niter.hh (oln/w/18_niter.hh 1.1 600))
  (olena/oln/core/abstract/fun.hh (oln/w/19_fun.hh 1.1 600))
  
  
  
  (olena/oln/core/abstract/dim.hh (oln/w/23_dim.hh 1.2 600))


  (olena/oln/core/point_nd.hh (oln/w/30_point_nd.h 1.2 644))
  (olena/oln/core/dpoint_nd.hh (oln/w/31_dpoint_nd. 1.2 644))
  (olena/oln/core/abstract/point.hxx (oln/w/32_point.hxx 1.1 644))
  (olena/oln/core/abstract/dpoint.hxx (oln/w/33_dpoint.hxx 1.1 644))
;; Files deleted by depopulate at Tue, 14 Sep 2004 12:43:58 +0200,
;; from version oln_2004_paradigm.2(w), by palma_g:

  ; (olena/oln/core/abstract/dpoints.hh ())

;; Files deleted by depopulate at Tue, 14 Sep 2004 12:44:44 +0200,
;; from version oln_2004_paradigm.2(w), by palma_g:

  ; (olena/oln/core/abstract/dpoint_like.hh ())

;; Files deleted by depopulate at Tue, 14 Sep 2004 12:44:55 +0200,
;; from version oln_2004_paradigm.2(w), by palma_g:

  ; (olena/oln/core/abstract/diter.hh ())

;; Files added by populate at Tue, 14 Sep 2004 12:52:29 +0200,
;; to version oln_2004_paradigm.2(w), by palma_g:

  (olena/oln/core/default_props.hh (oln/w/35_default_pr 1.1 644))
)
(Merge-Parents
  (oln_2004_paradigm.2 complete)
  (oln_2004_paradigm.3 complete
    (olena/ChangeLog olena/ChangeLog olena/ChangeLog r) (olena/oln/core/dpoint1d.hh olena/oln/core/dpoint1d.hh olena/oln/core/dpoint1d.hh r)
    (olena/oln/core/dpoint1d.hxx olena/oln/core/dpoint1d.hxx () d) (olena/oln/core/dpoint2d.hh olena/oln/core/dpoint2d.hh olena/oln/core/dpoint2d.hh r)
    (olena/oln/core/dpoint2d.hxx olena/oln/core/dpoint2d.hxx () d) (olena/oln/core/dpoint3d.hh olena/oln/core/dpoint3d.hh olena/oln/core/dpoint3d.hh r)
    (olena/oln/core/dpoint3d.hxx olena/oln/core/dpoint3d.hxx () d) (olena/oln/core/abstract/dpoint.hh olena/oln/core/abstract/dpoint.hh olena/oln/core/abstract/dpoint.hh r)
    (olena/oln/core/macros.hh olena/oln/core/macros.hh olena/oln/core/macros.hh r) (olena/oln/core/point1d.hh olena/oln/core/point1d.hh olena/oln/core/point1d.hh r)
    (olena/oln/core/point1d.hxx olena/oln/core/point1d.hxx () d) (olena/oln/core/point2d.hh olena/oln/core/point2d.hh olena/oln/core/point2d.hh r)
    (olena/oln/core/point2d.hxx olena/oln/core/point2d.hxx () d) (olena/oln/core/point3d.hh olena/oln/core/point3d.hh olena/oln/core/point3d.hh r)
    (olena/oln/core/point3d.hxx olena/oln/core/point3d.hxx () d) (olena/oln/core/abstract/point.hh olena/oln/core/abstract/point.hh olena/oln/core/abstract/point.hh r)
    (olena/oln/transforms/shapelets.hh olena/oln/transforms/shapelets.hh olena/oln/transforms/shapelets.hh r) (() () olena/oln/core/point_nd.hh a)
    (() () olena/oln/core/dpoint_nd.hh a) (() () olena/oln/core/abstract/point.hxx a)
    (() () olena/oln/core/abstract/dpoint.hxx a) 
  )
)
(New-Merge-Parents)
