							// -*- C++ -*-
#include "data.hh"
#include <oln/utils/md5.hh>

#include <ntg/bin.hh>
#include <oln/io/read_image.hh>
#include <oln/basics2d.hh>
#include <oln/morpho/hit_or_miss.hh>

using namespace oln;

bool check()
{
  utils::key::value_type data_key_hom_closing[16] =
    { 0xcb, 0x26, 0x85, 0x11, 0x46, 0xe9, 0x2f, 0x4e,
      0xba, 0xcd, 0xf1, 0xba, 0xa1, 0x60, 0xce, 0xac };
  utils::key key_hom_closing(data_key_hom_closing);

  utils::key::value_type data_key_hom_closing_bg[16] =
    { 0xe1, 0x8c, 0x75, 0x26, 0xee, 0x60, 0x13, 0xc2,
      0x22, 0xb1, 0xaa, 0x2e, 0xc1, 0x7a, 0x67, 0xa };
  utils::key key_hom_closing_bg(data_key_hom_closing_bg);

  image2d<ntg::bin> ima;
  ima = io::read(rdata("object.pbm"));

  oln::window2d win1;
  win1
    .add(-3,-2).add(-3,-1).add(-3,0).add(-3,1).add(-3,2)
    .add(-2,-1).add(-2,0).add(-2,1)
    .add(-1,0);
  oln::window2d win2 = -win1;

  if (utils::md5(morpho::hit_or_miss_closing(ima, win1, win2)) !=
      key_hom_closing)
    return true;

  if (utils::md5(morpho::hit_or_miss_closing_bg(ima, win1, win2)) !=
      key_hom_closing_bg)
    return true;

  return false;
}
