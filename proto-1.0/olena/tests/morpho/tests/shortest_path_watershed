							// -*- C++ -*-
#include "data.hh"

#include <ntg/int.hh>
#include <oln/core/2d/image2d.hh>
#include <oln/core/gen/image_with_nbh.hh>
#include <oln/io/read_image.hh>
#include <oln/morpho/shortest_path_watershed.hh>
#include <oln/utils/md5.hh>

using namespace oln;

bool check()
{
  // MD5 sum of object.pbm's watershed transform result.
  utils::key::value_type  data_key[16] =
    { 0x47, 0x69, 0xe9, 0x5c, 0x82, 0xe6, 0x2e, 0xc4,
      0x0, 0x72, 0x4a, 0xf5, 0x5f, 0x69, 0xf, 0x2b };
  utils::key key(data_key);

  image2d<ntg::int_u8> raw_input;
  raw_input = io::read(rdata("squares.pgm"));
  typedef image_with_nbh<image2d<ntg::int_u8>, neighborhood2d> image_type;
  image_type input = join(raw_input, neighb_c4());

  if (utils::md5(morpho::shortest_path_watershed<ntg::int_u8>(input)) != key)
    return true;

  return false;
}
