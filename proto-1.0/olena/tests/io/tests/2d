//								    -*- c++ -*-
// Copyright (C) 2005  EPITA Research and Development Laboratory
//
// This file is part of the Olena Library.  This library is free
// software; you can redistribute it and/or modify it under the terms
// of the GNU General Public License version 2 as published by the
// Free Software Foundation.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this library; see the file COPYING.  If not, write to
// the Free Software Foundation, 59 Temple Place - Suite 330, Boston,
// MA 02111-1307, USA.
//
// As a special exception, you may use this file as part of a free
// software library without restriction.  Specifically, if other files
// instantiate templates or use macros or inline functions from this
// file, or you compile this file and link it with other files to
// produce an executable, this file does not by itself cause the
// resulting executable to be covered by the GNU General Public
// License.  This exception does not however invalidate any other
// reasons why the executable file might be covered by the GNU General
// Public License.


#include "loadsave.hh"

#include <oln/core/2d/image2d.hh>

bool
check(void)
{
  bool fail = false;

  typedef oln::image2d<ntg::int_u8> ima_int_u8;
  typedef oln::image2d<ntg::rgb_8> ima_rgb_8;
  typedef oln::image2d<ntg::bin> ima_bin;
  typedef oln::image2d<ntg::int_s8> ima_int_s8;
  typedef oln::image2d<bool> ima_bool;
  typedef oln::image2d<unsigned char> ima_uchar;
  typedef oln::image2d<signed char> ima_schar;

  fail |= loadsave< ima_int_u8	>(rdata("16x16.pgm"), "16x16.pgm");
  fail |= loadsave< ima_bin	>(rdata("16x16.pbm"), "16x16.pbm");
  fail |= loadsave< ima_rgb_8	>(rdata("16x16.ppm"), "16x16.ppm");
  fail |= loadsave< ima_int_s8	>(rdata("16x16.pgm"), "16x16.pgm");
  fail |= loadsave< ima_bool	>(rdata("16x16.pbm"), "16x16.pbm");
  fail |= loadsave< ima_uchar	>(rdata("16x16.pgm"), "16x16.pgm");
  fail |= loadsave< ima_schar	>(rdata("16x16.pgm"), "16x16.pgm");

#if HAVE_ZLIB
  fail |= loadsave< ima_bin	>(rdata("16x16.pbm.gz"), "16x16.pbm.gz");
  fail |= loadsave< ima_int_u8	>(rdata("16x16.pgm.gz"), "16x16.pgm.gz");
  fail |= loadsave< ima_rgb_8	>(rdata("16x16.ppm.gz"), "16x16.ppm.gz");
  fail |= loadsave< ima_int_s8	>(rdata("16x16.pgm.gz"), "16x16.pgm.gz");
  fail |= loadsave< ima_bool	>(rdata("16x16.pbm.gz"), "16x16.pbm.gz");
  fail |= loadsave< ima_uchar	>(rdata("16x16.pgm.gz"), "16x16.pgm.gz");
  fail |= loadsave< ima_schar	>(rdata("16x16.pgm.gz"), "16x16.pgm.gz");
#endif

  return fail;
}
