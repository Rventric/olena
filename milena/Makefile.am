# Copyright (C) 2007, 2008, 2009, 2010 EPITA Research and Development
# Laboratory (LRDE).
#
# This file is part of Olena.
#
# Olena is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation, version 2 of the License.
#
# Olena is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Olena.  If not, see <http://www.gnu.org/licenses/>.

ACLOCAL_AMFLAGS = -I m4

SUBDIRS = 	\
  build-aux	\
  external	\
  doc 		\
  mesh 	 	\
  tests

if ENABLE_APPS
  SUBDIRS += apps
endif ENABLE_APPS

if ENABLE_TOOLS
  SUBDIRS += tools
endif ENABLE_TOOLS

.PHONY: pretty-check tests

pretty-check:
	cd tests && $(MAKE) $(AM_MAKEFLAGS) $@

tests:
	cd tests && $(MAKE) $(AM_MAKEFLAGS) $@

# Regen files recursively.
include $(top_srcdir)/build-aux/regen-recursive.mk
REGEN_SUBDIRS += doc tests

# Force the regeneration of `headers.mk'.
#
# We do not delegate the action of regenerating `headers.mk' to
# `regen' like this:
#
#   $(MAKE) $(AM_MAKEFLAGS) regen
#
# to avoid an infinite recursion, since
#
# - the generation of `headers.mk' would trigger the update
#   (regeneration) of `Makefile' (due to the behavior of Automade
#   Makefiles);
#
# and because
#
# - `Makefile' depends on `headers.mk' (because of the `include'
#    statement); and
# - `headers.mk' depends on `generate_dist_headers.sh'.
#
# Hence the redundant action.  There may be a better solution
regen-am:
	cd $(srcdir)							\
	  && $(abs_top_srcdir)/build-aux/generate_dist_headers.sh	\
	       mln headers.mk nodist-headers

EXTRA_DIST = nodist-headers
# FIXME: Change generate_dist_headers.sh so that the action looks like this:
#
#	$< $@.tmp && mv -f $@.tmp $@ && chmod -w $@
#
$(srcdir)/headers.mk: $(top_srcdir)/build-aux/generate_dist_headers.sh nodist-headers
	cd $(srcdir)							\
	  && $(abs_top_srcdir)/build-aux/generate_dist_headers.sh	\
	       mln headers.mk nodist-headers

include $(srcdir)/headers.mk

# Generated by configure from mln/version.hh.in.
nobase_nodist_include_HEADERS = mln/version.hh

imgdir = $(pkgdatadir)/images
dist_img_DATA =					\
  img/README					\
  img/fly.pbm					\
  img/fly.pgm					\
  img/fly.ppm					\
  img/lena.pbm					\
  img/lena.pgm					\
  img/lena.ppm					\
  img/lena_16.ppm				\
  img/medium.pgm				\
  img/medium.ppm				\
  img/picasso.pbm				\
  img/picasso.pgm				\
  img/picasso.ppm				\
  img/quite-small.pgm				\
  img/small.pbm					\
  img/small.pgm					\
  img/small.ppm					\
  img/squares-lc.pgm				\
  img/squares.pgm				\
  img/test.fits					\
  img/tiny.pbm					\
  img/tiny.pgm					\
  img/tiny.ppm					\
  img/toto.pbm

EXTRA_DIST +=					\
  tests/img/test_rgb8.tif			\
  tests/img/test_bw.tif				\
  tests/img/test_gl.tif


#<<lrde
## FIXME: All of this it too much ad hoc.  Use Git branches to
## distinguish distributed files from non distributed ones after the
## conversion of the repository.

## FIXME: Moreover, this list is partially duplicated in Olena's
## `Makefile.am', so that pruning also occurs both when rolling an
## Olena tarball or a (standalone) Milena tarball.

LRDE_STRIPPED_DIST_FILES =			\
  $(distdir)/Makefile.am			\
  $(distdir)/configure.ac			\
  $(distdir)/mln/accu/math/all.hh		\
  $(distdir)/mln/all.hh				\
  $(distdir)/mln/core/image/vmorph/all.hh	\
  $(distdir)/mln/core/image/vmorph/fun_image.hh	\
  $(distdir)/mln/data/all.hh			\
  $(distdir)/mln/essential/routine.hh		\
  $(distdir)/mln/fun/all.hh			\
  $(distdir)/mln/fun/essential.hh		\
  $(distdir)/mln/fun/v2v/all.hh			\
  $(distdir)/mln/fun/v2v/essential.hh		\
  $(distdir)/mln/linear/all.hh			\
  $(distdir)/mln/trait/all.hh			\
  $(distdir)/mln/trait/ch_value.hh		\
  $(distdir)/mln/value/all.hh			\
  $(distdir)/mln/value/essential.hh		\
  $(distdir)/tests/Makefile.am			\
  $(distdir)/tests/convert/Makefile.am		\
  $(distdir)/tests/extract/Makefile.am		\
  $(distdir)/tests/fun/v2v/Makefile.am		\
  $(distdir)/tests/linear/Makefile.am		\
  $(distdir)/tests/linear/gaussian/Makefile.am	\
  $(distdir)/tests/registration/Makefile.am	\
  $(distdir)/tests/trait/ch_value.cc		\
  $(distdir)/tests/value/Makefile.am

LRDE_NODIST_FILES =					\
  $(distdir)/tests/convert/to_hsl.cc		\
  $(distdir)/tests/extract/blue.cc		\
  $(distdir)/tests/extract/green.cc		\
  $(distdir)/tests/extract/hue.cc		\
  $(distdir)/tests/extract/lum.cc		\
  $(distdir)/tests/extract/red.cc		\
  $(distdir)/tests/extract/sat.cc		\
  $(distdir)/tests/fun/v2v/component.cc		\
  $(distdir)/tests/fun/v2v/hsl_to_rgb.cc		\
  $(distdir)/tests/fun/v2v/rgb_to_hsl.cc		\
  $(distdir)/tests/linear/gaussian.cc		\
  $(distdir)/tests/linear/gaussian/filter.cc	\
  $(distdir)/tests/registration/registration.cc	\
  $(distdir)/tests/value/stack.cc

## FIXME: Running `build-aux/build_unit_test.sh' just to update
## `milena/tests/unit_test/unit-tests.mk' is overkill:
##
## 1. It recreates *all* the sources (more than 1200 `.cc' files!).
##    => We should just regen `unit-tests.mk', not the `.cc' files.
##
## 2. It visits (almost) all the directories and files under
##    milena/mln/ (which admittedly a smaller issue compared to the
##    previous one)
##    => Prune `unit-tests.mk' instead of regenerating it.  The
##       simplest solution is probably to equip `unit-tests.mk' in the
##       first place with `<<lrde'/`>>' tags, then prune it with
##       dist-strip.
##

# Do not distribute parts tagged `lrde' (see build-aux/strip-lrde).
# Then, regen files; and if the `distdir' (or `dist' or `distcheck')
# target was run from Milena's (and not Olena's) source directory,
# call `autoreconf'.
dist-hook:
	for f in $(LRDE_STRIPPED_DIST_FILES); do		\
	  $(srcdir)/build-aux/strip-lrde $$f;			\
	done;							\
	rm -rf $(LRDE_NODIST_FILES)				\
	  && $(srcdir)/build-aux/build_unit_test.sh		\
	      $(distdir)/mln					\
	      $(distdir)/tests/unit_test			\
	      $(srcdir)/tests/unit_test/disabled_tests		\
	      mln						\
	  && if test x$(distdir) = x$(top_distdir); then	\
	       (						\
	         cd $(distdir);					\
	         set -evx;					\
	         autoreconf -f -v -i;				\
	         find . -name autom4te.cache | xargs rm -rf	\
	       )						\
	     fi
#>>
