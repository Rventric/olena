#!/bin/sh

if test "x$VERBOSE" != x; then
  verb='echo'
  quiet=''
else
  verb=':'
  quiet='-q'
fi

exec 6>&2
. ../check/defs
exec 2>&6

failures=0

indir=${SRCDIR-.}/tests
rundir=runs
test -d $rundir || mkdir $rundir

# If no tests were given on the command line, get the list from $indir.
if test $# = 0; then
  set dummy $indir/*
  shift
fi

for test; do
  # We want only the basename of $test.
  test=`basename "$test"`
  fail=0
  dir=$rundir/$test
  input=$indir/$test
  rm -rf $dir
  mkdir $dir
  # Build the source code to compile.
  src=$dir/$test.cc
  cat >$src <<'EOF'
#include <ntg/all.hh>
using namespace ntg;
int main() {
EOF
  cat $input >>$src
  echo '}' >>$src
  # Build the compile script (using such a script make it easier
  # to debug failures);
  cat >$dir/try <<EOF
exec 6>&2
if test "x\$1" = "x-q"; then
  exec 2>$dir/cxx.errors
else
  echo $CXX $CPPFLAGS $CXXFLAGS $LDFLAGS $dir/$test.cc
fi
$CXX $CPPFLAGS $CXXFLAGS $LDFLAGS "$dir/$test.cc" -o "$dir/test$EXEEXT" || exit 50

if test "x\$1" = "x-q"; then
  exec 2>$dir/run.errors
else
  echo $dir/test$EXEEXT
fi
$dir/test$EXEEXT
estatus=\$?

exec 2>&6
echo \$estatus > $dir/exit.status
exit \$estatus
EOF
  chmod +x $dir/try

  # Do we expect a failure?
  expected=ok
  grep '//.*ABORT' $input >/dev/null && expected=abort
  grep '//.*COMPFAIL' $input >/dev/null && expected=compfail

  # Do we know the test fails ?
  xfail=no
  grep '//.*XFAIL' $input >/dev/null && xfail=yes

  # Run the test.
  $verb ========== Running $test... >&2
  ($SHELL $dir/try "$quiet" "$dir")
  estatus=$?

  msg="";
  case $expected:$estatus in
    ok:0 | compfail:50 | abort:134) rm -rf "$dir" ;;
    *:50) msg="(doesn't compile)" ;;
    *:134) msg="(aborts at run-time)" ;;
    compfail:*) msg="(compiles!)" ;;
    abort:*) msg="(doesn't abort!)" ;;
    ok:*) msg="(exits with \$?=$estatus)" ;;
    *) ;;
  esac
  if test -d $dir; then
    if test "$xfail" = "no"; then
      echo "FAIL: $test $msg" >&2
      failures=`expr $failures + 1`
    else
      echo "XFAIL: $test $msg" >&2
    fi
  else
    echo "PASS: $test" >&2
  fi
done

echo ========================================>&2
if test $failures = 0; then
  echo No failures. >&2
  exit 0
else
  echo $failures failures. >&2
  exit 1
fi
