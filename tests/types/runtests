#!/bin/sh

if test "x$1" = "x-v"; then
  shift
  VERBOSE=v
  verb='echo'
  quiet=''
else
  verb=':'
  quiet='-q'
fi

exec 6>&2
. ../defs
exec 2>&6

failures=0

indir=${SRCDIR-.}/tests
rundir=runs
test -d $rundir || mkdir $rundir

# If no tests were given on the command line, get the list from $indir.
if test $# = 0; then
  set dummy $indir/*
  shift
fi

for test; do
  # We want only the basename of $test.
  test=`expr "/$test" : '.*/\([^/]*\)'`
  fail=0
  dir=$rundir/$test
  input=$indir/$test
  rm -rf $dir
  mkdir $dir
  # Build the source code to compile.
  src=$dir/$test.cc
  cat >$src <<'EOF'
#include <oln/types/all.hh>
using namespace oln;
int main() {
EOF
  cat $input >>$src
  echo '}' >>$src
  # Build the compile script (using such a script make it easier
  # to debug failures);
  try=$dir/try
  cat >$try <<EOF
exec 6>&2
if test "x\$1" = "x-q"; then
  exec 2>cxx.errors
else
  echo $CXX $CXXFLAGS $test.cc -Werror
fi
$CXX $CXXFLAGS $test.cc -Werror || exit 50

if test "x\$1" = "x-q"; then
  exec 2>run.errors
else
  echo ./a.out
fi
./a.out
estatus=\$?

exec 2>&6
echo \$estatus > exit.status
exit \$estatus
EOF
  chmod +x $try

  # Do we expect a failure?
  expected=ok
  grep '//.*ABORT' $input >/dev/null && expected=abort
  grep '//.*COMPFAIL' $input >/dev/null && expected=compfail

  # Run the test.
  $verb ========== Running $test... >&2
  (cd $dir && ./try $quiet)
  estatus=$?

  msg="";
  case $expected:$estatus in
    ok:0 | compfail:50 | abort:134) rm -rf $dir ;;
    *:50) msg="(doesn't compile)" ;;
    *:134) msg="(aborts at run-time)" ;;
    compfail:*) msg="(compiles!)" ;;
    abort:*) msg="(doesn't abort!)" ;;
    ok:*) msg="(exits with \$?=$estatus)" ;;
    *) ;;
  esac
  if test -d $dir; then
    echo "FAIL: $test $msg" >&2
    failures=`expr $failures + 1`
  else
    echo "PASS: $test" >&2
  fi
done

echo ========================================>&2
if test $failures = 0; then
  echo No failures. >&2
else
  echo $failures failures. >&2
fi
