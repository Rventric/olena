#!/usr/bin/env ruby

require 'pathname'
require 'rbconfig'
require 'erb'

TOP_DIR = Pathname.new(__FILE__).dirname

class Configure
  def initialize ( &block )
    @patt = {}
    instance_eval(&block)
    do_gsub
  end
  def gsub ( name, val=get(name.to_s) )
    @patt[((name.is_a? Regexp)? name : "@@#{name}@@")] = val
  end
  def do_gsub
    Pathname.glob(TOP_DIR + '**/*.in').each do |path|
      puts path
      contents = path.read
      @patt.each { |patt, val| contents.gsub! patt, val }
      Pathname.new(path.to_s.sub(/\.in$/, '')).open('w') { |f| f.puts contents }
    end
  end
  def get ( name )
    Config::CONFIG[name] || eval(name)
  end
  def erb ( file )
    result = ERB.new(file.read, nil, '<-%->', '$erbout_').result
    Pathname.new(file.to_s.sub(/\.erb\./, '.')).open('w') { |f| f.puts result }
  end
end
Kernel.send :undef_method, :gsub

SOURCE_DIR = TOP_DIR.expand_path + 'src'

Configure.new do
  gsub :SOURCE_DIR
  gsub :LDSHARED
  gsub :LIBRUBYARG
  gsub :LIBRUBYARG_SHARED
  gsub :CXX, 'g++'
  gsub :CFLAGS, '-I' + Config::CONFIG['topdir'] + ' -Wall'
  erb SOURCE_DIR + 'function_loader.erb.hh'
end

puts "Configuring: done."
